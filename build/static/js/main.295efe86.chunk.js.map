{"version":3,"sources":["features/counter/userSlice.js","firebase.js","images/avatar.png","Avatar.js","UserContainer.js","features/counter/appSlice.js","Channel.js","Category.js","ChannelsListHeader.js","ChannelsList.js","Message.js","Chat.js","ChatMenu.js","DesktopMenu.js","FriendRequest.js","Desktop.js","FriendButton.js","Friends.js","MembersList.js","ServerIcon.js","MainPageIcon.js","DownloadIcon.js","ExploreIcon.js","AddServerIcon.js","Menu.js","Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","avatarColor","reducers","login","state","action","payload","logout","actions","selectUser","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","GoogleAuthProvider","Avatar","className","style","backgroundColor","src","avatar","alt","UserContainer","useSelector","u","currentUser","useState","mute","muteChange","deafen","deafenChange","history","useHistory","nick","email","slice","indexOf","onClick","console","log","photoURL","color","fontWeight","signOut","push","appSlice","channelId","channelName","categoryId","categoryName","serverId","serverName","setChannelInfo","setCategoryInfo","setServerInfo","selectChannelId","app","selectChannelName","selectCategoryId","selectServerId","selectServerName","Channel","id","title","dispatch","useDispatch","channel","collection","doc","get","then","rel","forEach","element","ref","delete","Category","channels","setChannels","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","prompt","add","timestamp","FieldValue","serverTimestamp","e","stopPropagation","category","res","removeCategory","ChannelsListHeader","ChannelsList","categories","setCategories","Message","message","date","Chat","messages","setMessages","messageText","setMessageText","messagesEnd","setMessagesEnd","msg","scrollIntoView","behavior","el","onChange","event","target","value","placeholder","readOnly","length","dateEdit","d","Date","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","sendMessage","ChatMenu","type","DesktopMenu","FriendRequest","toggle","toggleChange","opacity","Desktop","Component","FriendButton","image","StateProvider","MembersList","ServerIcon","server","MainPageIcon","DownloadIcon","ExploreIcon","AddServerIcon","Menu","servers","setServers","to","Login","setEmail","password","setPassword","preventDefault","signInWithEmailAndPassword","catch","alert","createUserWithEmailAndPassword","App","rand","Math","random","ceil","updateProfile","onAuthStateChanged","authUser","path","configureStore","reducer","userReducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.295efe86.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    user: null,\r\n    avatarColor: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = state => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAtj_81c06R5SJmISCVNMl2VG8ZctOS2P8\",\r\n    authDomain: \"discord-clone-47751.firebaseapp.com\",\r\n    databaseURL: \"https://discord-clone-47751.firebaseio.com\",\r\n    projectId: \"discord-clone-47751\",\r\n    storageBucket: \"discord-clone-47751.appspot.com\",\r\n    messagingSenderId: \"207252815520\",\r\n    appId: \"1:207252815520:web:10de1b465959996f7693c5\",\r\n    measurementId: \"G-70RNRR6DPD\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { auth, provider };\r\nexport default db;","export default __webpack_public_path__ + \"static/media/avatar.d2a70ff7.png\";","import React from 'react';\r\nimport './Avatar.css';\r\nimport avatar from './images/avatar.png';\r\n\r\nfunction Avatar({ avatarColor }) {\r\n\r\n    return (\r\n        <div className='avatar' style={{ backgroundColor: avatarColor }}>\r\n            <img src={avatar} alt='avatar' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Avatar\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './UserContainer.css';\r\nimport { IoMdMic, IoMdMicOff } from \"react-icons/io\";\r\nimport { GoUnmute, GoMute } from \"react-icons/go\";\r\nimport { FiLogOut } from \"react-icons/fi\";\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from './features/counter/userSlice';\r\nimport { auth } from './firebase';\r\nimport Avatar from './Avatar';\r\nimport firebase from 'firebase';\r\n\r\nfunction UserContainer() {\r\n    const user = useSelector(selectUser);\r\n    const u = firebase.auth().currentUser;\r\n    const [mute, muteChange] = useState(true);\r\n    const [deafen, deafenChange] = useState(true);\r\n    let history = useHistory();\r\n    let nick = ' '\r\n    if (user) nick = user.email.slice(0, user.email.indexOf('@'));\r\n\r\n    const logout = () => {\r\n        if (user) {\r\n            auth.signOut();\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='userContainer'>\r\n            <div className='userContainer_left' onClick={() => console.log(u)}>\r\n                <Avatar avatarColor={u.photoURL} />\r\n                <div>\r\n                    <p style={{ color: 'white', fontWeight: '600' }}>{nick}</p>\r\n                    <p>#5990</p>\r\n                </div>\r\n            </div>\r\n            <div className='userContainer_right' onClick={() => console.log(user)}>\r\n                {\r\n                    mute\r\n                        ?\r\n                        <button className='userContainer_right_mute' onClick={() => muteChange(!mute)}>\r\n                            <IoMdMic />\r\n                        </button>\r\n                        :\r\n                        <button className='userContainer_right_unmute' onClick={() => muteChange(!mute)}>\r\n                            <IoMdMicOff />\r\n                        </button>\r\n                }\r\n                <div className='userContainer_right_muteAlert'>\r\n                    <p>Mute</p>\r\n                </div>\r\n                <div className='userContainer_right_unmuteAlert'>\r\n                    <p>Unmute</p>\r\n                </div>\r\n                {\r\n                    deafen\r\n                        ?\r\n                        <button className='userContainer_right_deafen' onClick={() => deafenChange(!deafen)}>\r\n                            <GoUnmute />\r\n                        </button>\r\n                        :\r\n                        <button className='userContainer_right_undeafen' onClick={() => deafenChange(!deafen)}>\r\n                            <GoMute />\r\n                        </button>\r\n                }\r\n                <div className='userContainer_right_deafenAlert'>\r\n                    <p>Deafen</p>\r\n                </div>\r\n                <div className='userContainer_right_undeafenAlert'>\r\n                    <p>Undeafen</p>\r\n                </div>\r\n                <button onClick={logout} className='userContainer_right_settings'>\r\n                    <FiLogOut />\r\n                </button>\r\n                <div className='userContainer_right_settingsAlert'>\r\n                    <p>Logout</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserContainer\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const appSlice = createSlice({\r\n    name: 'app',\r\n    initialState: {\r\n        channelId: null,\r\n        channelName: null,\r\n        categoryId: null,\r\n        categoryName: null,\r\n        serverId: null,\r\n        serverName: null,\r\n    },\r\n    reducers: {\r\n        setChannelInfo: (state, action) => {\r\n            state.channelId = action.payload.channelId;\r\n            state.channelName = action.payload.channelName;\r\n        },\r\n        setCategoryInfo: (state, action) => {\r\n            state.categoryId = action.payload.categoryId;\r\n            state.categoryName = action.payload.categoryName;\r\n        },\r\n        setServerInfo: (state, action) => {\r\n            state.serverId = action.payload.serverId;\r\n            state.serverName = action.payload.serverName;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { setChannelInfo, setCategoryInfo, setServerInfo } = appSlice.actions;\r\n\r\nexport const selectChannelId = state => state.app.channelId;\r\nexport const selectChannelName = state => state.app.channelName;\r\n\r\nexport const selectCategoryId = state => state.app.categoryId;\r\nexport const selectCategoryName = state => state.app.categoryName;\r\n\r\nexport const selectServerId = state => state.app.serverId;\r\nexport const selectServerName = state => state.app.serverName;\r\n\r\nexport default appSlice.reducer;\r\n","import React from 'react';\r\nimport './Channel.css';\r\nimport { FaHashtag } from \"react-icons/fa\";\r\nimport { BsX } from \"react-icons/bs\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setChannelInfo, selectCategoryId, selectChannelId, selectServerId } from './features/counter/appSlice';\r\nimport db from './firebase';\r\n\r\n\r\nfunction Channel({ id, title }) {\r\n    const dispatch = useDispatch();\r\n    const categoryId = useSelector(selectCategoryId);\r\n    const channelId = useSelector(selectChannelId);\r\n    const serverId = useSelector(selectServerId);\r\n\r\n    const removeChannel = () => {\r\n        const channel = db.collection('servers').doc(serverId).collection('categories').doc(categoryId).collection('channels').doc(channelId);\r\n        channel.collection('messages').get().then((rel) => {\r\n            rel.forEach((element) => {\r\n                element.ref.delete();\r\n            })\r\n        })\r\n\r\n        channel.delete();\r\n\r\n        dispatch(\r\n            setChannelInfo({\r\n                channelId: null,\r\n            })\r\n        )\r\n\r\n    }\r\n    return (\r\n        <div className='channel' onClick={() => {\r\n            if (id !== channelId) {\r\n                dispatch(\r\n                    setChannelInfo({\r\n                        channelId: id,\r\n                        channelName: title,\r\n                    })\r\n                )\r\n            }\r\n        }}>\r\n            <div className='channel_title'>\r\n                <FaHashtag />\r\n                <p className='channel_title_text'>{title}</p>\r\n            </div>\r\n            {\r\n                id === channelId\r\n                    ?\r\n                    <BsX className='channel_remove' onClick={removeChannel} />\r\n                    :\r\n                    null\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Channel\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Category.css'\r\nimport { FiChevronDown, FiChevronRight } from 'react-icons/fi'\r\nimport Channel from './Channel'\r\nimport db from './firebase'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectCategoryId, selectServerId, setCategoryInfo, setChannelInfo } from './features/counter/appSlice'\r\nimport firebase from 'firebase'\r\nimport { BsX, BsPlus } from \"react-icons/bs\";\r\n\r\nfunction Category({ id, title }) {\r\n    const categoryId = useSelector(selectCategoryId)\r\n    const serverId = useSelector(selectServerId)\r\n    const [channels, setChannels] = useState([])\r\n    const dispatch = useDispatch();\r\n\r\n    const addChannel = () => {\r\n        const channelName = prompt('Add channel:');\r\n        if (channelName) {\r\n            db.collection('servers').doc(serverId).collection('categories').doc(categoryId).collection('channels').add({\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                channelName: channelName,\r\n            });\r\n        }\r\n    }\r\n\r\n    const removeCategory = () => {\r\n        const category = db.collection('servers').doc(serverId).collection('categories').doc(categoryId);\r\n        const channel = category.collection('channels');\r\n        channel.get().then((res) => {\r\n            res.forEach((element) => {\r\n                element.ref.collection('messages').get().then((res) => {\r\n                    res.forEach((element) => {\r\n                        element.ref.delete();\r\n                    });\r\n                    element.ref.delete();\r\n                });\r\n                element.ref.delete();\r\n            });\r\n        });\r\n\r\n        category.delete();\r\n\r\n        dispatch(\r\n            setChannelInfo({\r\n                channelId: null,\r\n            })\r\n        );\r\n\r\n        dispatch(\r\n            setCategoryInfo({\r\n                categoryId: null,\r\n            })\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (categoryId) {\r\n            db.collection('servers').doc(serverId).collection('categories').doc(categoryId).collection('channels').orderBy('timestamp').onSnapshot((snapshot) =>\r\n                setChannels(snapshot.docs.map((doc) => ({\r\n                    id: doc.id,\r\n                    channel: doc.data(),\r\n                }))));\r\n        }\r\n\r\n    }, [categoryId, serverId])\r\n    return (\r\n        <div className='category' onClick={() => {\r\n            if (id !== categoryId) {\r\n                dispatch(\r\n                    setCategoryInfo({\r\n                        categoryId: id,\r\n                        categoryName: title,\r\n                    })\r\n                )\r\n            }\r\n\r\n        }}>\r\n            <div className='category_header'>\r\n                <div className='category_header_title'>\r\n                    {id === categoryId\r\n                        ?\r\n                        <FiChevronDown />\r\n                        :\r\n                        <FiChevronRight />\r\n                    }\r\n                    <p>{title}</p>\r\n                </div>\r\n                <div className='category_header_menu'>\r\n                    {id === categoryId\r\n                        ?\r\n                        <>\r\n                            <BsPlus className='category_header_menu_add' onClick={addChannel} />\r\n                            <BsX className='category_header_menu_remove' onClick={(e) => { e.stopPropagation(); removeCategory() }} />\r\n                        </>\r\n                        : null\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className='category_channels'>\r\n                {id === categoryId\r\n                    ?\r\n                    channels.map(({ id, channel }) => (\r\n                        <Channel key={id} id={id} title={channel.channelName} />\r\n                    ))\r\n                    : null\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Category\r\n","import React from 'react'\r\nimport './ChannelsListHeader.css'\r\nimport { BsPlus } from \"react-icons/bs\";\r\nimport db from './firebase';\r\nimport firebase from 'firebase';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectServerId, selectServerName } from './features/counter/appSlice';\r\n\r\nfunction ChannelsListHeader() {\r\n    const serverId = useSelector(selectServerId);\r\n    const serverName = useSelector(selectServerName);\r\n\r\n    const addCategory = () => {\r\n        const categoryName = prompt('New category name: ');\r\n        if (serverId && categoryName) {\r\n            db.collection('servers').doc(serverId).collection('categories').add({\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                categoryName,\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='channelsListHeader'>\r\n            {\r\n                serverId\r\n                    ?\r\n                    <>\r\n                        <p className='channelsListHeader_title'>{serverName}</p>\r\n                        <BsPlus className='channelsListHeader_title_add' onClick={addCategory} />\r\n                    </>\r\n                    :\r\n                    null\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChannelsListHeader\r\n","import React, { useState, useEffect } from 'react'\r\nimport './ChannelsList.css'\r\nimport UserContainer from './UserContainer'\r\nimport Category from './Category'\r\nimport ChannelsListHeader from './ChannelsListHeader'\r\nimport db from './firebase'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectServerId } from './features/counter/appSlice';\r\n\r\nfunction ChannelsList() {\r\n    const serverId = useSelector(selectServerId);\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (serverId) {\r\n            db.collection('servers').doc(serverId).collection('categories').orderBy('timestamp').onSnapshot((snapshot) => {\r\n                setCategories(\r\n                    snapshot.docs.map((doc) => ({\r\n                        id: doc.id,\r\n                        category: doc.data(),\r\n                    }))\r\n                )\r\n            })\r\n        }\r\n    }, [serverId])\r\n\r\n    return (\r\n        <div className='channelsList'>\r\n            <div className='channelsList_top'>\r\n                <ChannelsListHeader title='Channel' />\r\n                <div className='channelsList_body'>\r\n                    {categories.map(({ id, category }) => (\r\n                        <Category key={id} id={id} title={category.categoryName} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <UserContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChannelsList\r\n","import React from 'react'\r\nimport './Message.css';\r\nimport Avatar from './Avatar'\r\n\r\nfunction Message({ id, message, nick, date, avatarColor }) {\r\n\r\n    return (\r\n        <div className='message'>\r\n            <Avatar avatarColor={avatarColor} />\r\n            <div className='message_info'>\r\n                <div className='message_info_title'>\r\n                    <p className='message_info_title_nick' style={{ color: avatarColor }}>{nick}</p>\r\n                    <p className='message_info_title_date'>{date}</p>\r\n                </div>\r\n                <div className='message_info_text'>\r\n                    <p>{message}</p>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React, { useState } from 'react';\r\nimport './Chat.css';\r\nimport { MdAddCircle } from \"react-icons/md\";\r\nimport { FaGift, FaSmile } from \"react-icons/fa\";\r\nimport { RiFileGifFill } from \"react-icons/ri\";\r\nimport { MdSend } from \"react-icons/md\";\r\nimport Message from './Message';\r\nimport { useEffect } from 'react';\r\nimport db from './firebase';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from './features/counter/userSlice';\r\nimport { selectCategoryId, selectChannelId, selectChannelName, selectServerId } from './features/counter/appSlice';\r\nimport firebase from 'firebase';\r\nimport { FaHashtag } from \"react-icons/fa\";\r\n\r\nfunction Chat() {\r\n    const user = useSelector(selectUser);\r\n    const u = firebase.auth().currentUser;\r\n    const categoryId = useSelector(selectCategoryId);\r\n    const serverId = useSelector(selectServerId);\r\n    const channelId = useSelector(selectChannelId);\r\n    const channelName = useSelector(selectChannelName);\r\n    const [messages, setMessages] = useState([]);\r\n    const [messageText, setMessageText] = useState();\r\n    const [messagesEnd, setMessagesEnd] = useState();\r\n    const [serverName] = useState('server');\r\n\r\n\r\n    const sendMessage = () => {\r\n        console.log(channelId)\r\n        if (channelId) {\r\n            let nick = ''\r\n            if (user) nick = user.email.slice(0, user.email.indexOf('@'));\r\n\r\n            const dateEdit = (date) => {\r\n                if (date < 10) return `0${date}`\r\n                else return date\r\n            }\r\n            let d = new Date();\r\n            let day = d.getDate();\r\n            let month = d.getMonth();\r\n            let year = d.getFullYear();\r\n            let hours = d.getHours();\r\n            let minutes = d.getMinutes();\r\n            let date = `${dateEdit(hours)}:${dateEdit(minutes)} \\xa0 ${dateEdit(day)}/${dateEdit(month)}/${dateEdit(year)}`;\r\n\r\n            db.collection('servers').doc(serverId).collection('categories').doc(categoryId).collection('channels').doc(channelId).collection('messages').add({\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                message: messageText,\r\n                nick,\r\n                date,\r\n                avatarColor: u.photoURL,\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (channelId) {\r\n            db.collection('servers').doc(serverId).collection('categories').doc(categoryId).collection('channels').doc(channelId).collection(\"messages\").orderBy('timestamp').onSnapshot((snapshot) =>\r\n                setMessages(\r\n                    snapshot.docs.map((doc) => ({\r\n                        id: doc.id,\r\n                        msg: doc.data(),\r\n                    }))\r\n                )\r\n            );\r\n        }\r\n    }, [channelId, categoryId, serverId])\r\n    return (\r\n        <div className='chat'>\r\n            <div className='chat_messages'>\r\n                <div className='chat_messages_top'>\r\n\r\n                </div>\r\n                <div className='chat_messages_bottom' >\r\n                    <div className='chat_messages_bottom_emptyChannel'>\r\n                        <div className='chat_messages_bottom_emptyChannel_icon'><FaHashtag /></div>\r\n                        <p className='chat_messages_bottom_emptyChannel_welcome'>Welcome to #{channelName ? channelName : serverName}!</p>\r\n                        {\r\n                            channelName\r\n                                ?\r\n                                <p className='chat_messages_bottom_emptyChannel_description'>This is the start of the #{channelName ? channelName : serverName} channel.</p>\r\n                                :\r\n                                <p className='chat_messages_bottom_emptyChannel_description'>Choose category and channel.</p>\r\n                        }\r\n                    </div>\r\n                    {messages.map(({ id, msg }) => (\r\n                        <Message key={id} id={id} message={msg.message} nick={msg.nick} date={msg.date} avatarColor={msg.avatarColor} />\r\n                    ))}\r\n                    {(messagesEnd)\r\n                        ?\r\n                        messagesEnd.scrollIntoView({ behavior: 'smooth' })\r\n                        :\r\n                        null\r\n                    }\r\n\r\n\r\n\r\n                    <div ref={(el) => setMessagesEnd(el)}>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='chat_sendTextField'>\r\n                <MdAddCircle className='chat_sendTextField_icon' />\r\n                {\r\n                    channelName\r\n                        ?\r\n                        <input className='chat_sendTextField_input' onChange={(event) => setMessageText(event.target.value)} placeholder={`Message #${channelName}`} />\r\n                        :\r\n                        <input className='chat_sendTextField_input' onChange={(event) => setMessageText(event.target.value)} placeholder={`Message #${serverName}`} readOnly='readonly' />\r\n                }\r\n                <MdSend className='chat_sendTextField_send' onClick={() => { if (channelName && messageText.length > 0) sendMessage() }} />\r\n                <FaGift className='chat_sendTextField_icon' />\r\n                <RiFileGifFill className='chat_sendTextField_icon' />\r\n                <FaSmile className='chat_sendTextField_icon' onClick={() => console.log(u.photoURL)} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","import React from 'react'\r\nimport './ChatMenu.css'\r\nimport { AiFillBell, AiFillPushpin, AiOutlineSearch } from \"react-icons/ai\";\r\nimport { BsFillPersonFill } from \"react-icons/bs\";\r\nimport { CgInbox } from \"react-icons/cg\";\r\nimport { IoMdHelpCircle } from \"react-icons/io\";\r\nimport { FaHashtag } from \"react-icons/fa\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectCategoryId, selectChannelId, selectChannelName, selectServerId, setChannelInfo } from './features/counter/appSlice';\r\n\r\nfunction ChatMenu({ title }) {\r\n    const dispatch = useDispatch();\r\n    const channelName = useSelector(selectChannelName);\r\n    const serverId = useSelector(selectServerId);\r\n    const categoryId = useSelector(selectCategoryId);\r\n    const channelId = useSelector(selectChannelId);\r\n\r\n    return (\r\n        <div className='chatMenu'>\r\n            <div className='chatMenu_left'>\r\n                <FaHashtag />\r\n                <p className='chatMenu_left_title'>{channelName}</p>\r\n            </div>\r\n            <div className='chatMenu_right'>\r\n                <AiFillBell className='chatMenu_right_navIcon' />\r\n                <AiFillPushpin className='chatMenu_right_navIcon' />\r\n                <BsFillPersonFill className='chatMenu_right_navIcon' />\r\n                <input className='chatMenu_right_searchBar' type='text' placeholder='Search' />\r\n                <AiOutlineSearch className='chatMenu_right_searchIcon' />\r\n                <CgInbox className='chatMenu_right_navIcon' onClick={() => dispatch(setChannelInfo({ channelId: null }))} />\r\n                <IoMdHelpCircle className='chatMenu_right_navIcon' onClick={() => console.log(`${serverId} | ${categoryId} | ${channelId}`)} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatMenu\r\n","import React from 'react'\r\nimport './DesktopMenu.css'\r\n\r\nfunction DesktopMenu() {\r\n    return (\r\n        <div className='desktopMenu'>\r\n            <button className='desktopMenu_friends'>Friends</button>\r\n            <button className='desktopMenu_online'>Online</button>\r\n            <button className='desktopMenu_all'>All</button>\r\n            <button className='desktopMenu_pending'>Pending</button>\r\n            <button className='desktopMenu_blocked'>Blocked</button>\r\n            <button className='desktopMenu_addFriend'>Add Friend</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DesktopMenu\r\n","import React, { useState } from 'react'\r\nimport './FriendRequest.css'\r\n\r\nfunction FriendRequest() {\r\n    const [toggle, toggleChange] = useState(false)\r\n    let buttonAvailable = (event) => {\r\n        if (event.target.value.length > 0) {\r\n            toggleChange(true)\r\n        }\r\n        else {\r\n            toggleChange(false)\r\n        }\r\n    }\r\n    return (\r\n        <div className='friendRequest'>\r\n            <p className='friendRequest_title'>ADD FRIEND</p>\r\n            <p className='friendRequest_description'>You can add a friend with their Discord Tag. It's cAsE sEnSitIvE!</p>\r\n            <div className='friendRequest_input'>\r\n                <input className='friendRequest_enterUser' onChange={buttonAvailable} type='text' placeholder='Enter a Username#0000' />\r\n                {toggle\r\n                    ?\r\n                    <button className='friendRequest_sendRequest' style={{ opacity: '1' }}>Send Friend Request</button>\r\n                    :\r\n                    <button className='friendRequest_sendRequest'>Send Friend Request</button>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendRequest\r\n\r\n","import React, { Component } from 'react'\r\nimport DesktopMenu from './DesktopMenu'\r\nimport './Desktop.css'\r\nimport FriendRequest from './FriendRequest'\r\n\r\nexport default class Desktop extends Component {\r\n    render() {\r\n        return (\r\n            <div className='desktop'>\r\n                <DesktopMenu />\r\n                <FriendRequest />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport './FriendButton.css'\r\nimport { BsX } from \"react-icons/bs\";\r\n\r\n\r\n\r\nfunction FriendButton({ image, nick }) {\r\n    const removeFriend = () => {\r\n\r\n    }\r\n    return (\r\n        <div className='friendButton'>\r\n            <img src={image} alt='avatar' />\r\n            {nick}\r\n            <div className='friendButton_xIconDiv' onClick={removeFriend}>\r\n                <BsX className='friendButton_xIconDiv_xIcon' />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendButton\r\n","import React, { Component } from 'react'\r\nimport './Friends.css'\r\nimport { FaUserFriends } from 'react-icons/fa';\r\nimport { GiSpikedSnail } from 'react-icons/gi';\r\nimport FriendButton from './FriendButton';\r\nimport UserContainer from './UserContainer';\r\n\r\nexport default class StateProvider extends Component {\r\n    render() {\r\n        return (\r\n            <div className='friends'>\r\n                <div>\r\n                    <div className='friends_searchBar'>\r\n                        <button>Find or start a conversation</button>\r\n                    </div>\r\n                    <div className='friends_directMessages'>\r\n                        <div className='friends_directMessages_friends'>\r\n                            <button><FaUserFriends className='friends_directMessages_friends_icon' />Friends</button>\r\n                            <button><GiSpikedSnail className='friends_directMessages_friends_icon' />Nitro</button>\r\n                            <div className='friends_directMessages_friends_title'>\r\n                                <p>DIRECT MESSAGES</p>\r\n\r\n                                <div className='friends_directMessages_friends_title_add'>\r\n                                    +\r\n                                    <div className='friends_directMessages_friends_title_alert'>\r\n                                        <p>Add new friend</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <FriendButton image='https://play-lh.googleusercontent.com/IeNJWoKYx1waOhfWF6TiuSiWBLfqLb18lmZYXSgsH1fvb8v1IYiZr5aYWe0Gxu-pVZX3' nick='Friend' />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <UserContainer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\nimport './MembersList.css'\r\n\r\nfunction MembersList() {\r\n    return (\r\n        <div className='membersList'>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MembersList\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectServerId, setServerInfo, setChannelInfo, setCategoryInfo } from './features/counter/appSlice';\r\nimport './ServerIcon.css'\r\nimport { BsX } from \"react-icons/bs\";\r\nimport db from './firebase';\r\n\r\n\r\nfunction ServerIcon({ id, title }) {\r\n    const dispatch = useDispatch();\r\n    const serverId = useSelector(selectServerId);\r\n\r\n    const removeServer = () => {\r\n        const server = db.collection('servers');\r\n\r\n\r\n        server.doc(serverId).collection('categories').get().then((res) => {\r\n            res.forEach((element) => {\r\n                element.ref.collection('channels').get().then((res) => {\r\n                    res.forEach((element) => {\r\n                        element.ref.collection('messages').get().then((res) => {\r\n                            res.forEach((element) => {\r\n                                element.ref.delete();\r\n                            });\r\n                            element.ref.delete();\r\n                        });\r\n                        element.ref.delete();\r\n                    });\r\n                    element.ref.delete();\r\n                });\r\n                element.ref.delete();\r\n            });\r\n        });\r\n\r\n        server.doc(serverId).delete();\r\n\r\n        dispatch(\r\n            setChannelInfo({\r\n                channelId: null,\r\n            })\r\n        )\r\n\r\n        dispatch(\r\n            setCategoryInfo({\r\n                categoryId: null,\r\n            })\r\n        )\r\n\r\n        dispatch(\r\n            setServerInfo({\r\n                serverId: null,\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className='serverIcon' onClick={() => {\r\n            if (id !== serverId) {\r\n                dispatch(\r\n                    setServerInfo({\r\n                        serverId: id,\r\n                        serverName: title,\r\n                    })\r\n                )\r\n            }\r\n\r\n        }}>\r\n            <p className='serverIcon_title'>{title ? title[0] : null}</p>\r\n            {\r\n                id === serverId ?\r\n                    <div className='serverIcon_remove' onClick={removeServer}><BsX /></div>\r\n                    :\r\n                    null\r\n            }\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ServerIcon\r\n","import React from 'react'\r\nimport './MainPageIcon.css'\r\n\r\n\r\nfunction MainPageIcon({ image }) {\r\n    return (\r\n        <div className='mainPageIcon'>\r\n            <img\r\n                src={image}\r\n                alt='icon'\r\n                className='mainPageIcon_img'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPageIcon\r\n","import React from 'react'\r\nimport './DownloadIcon.css'\r\nimport { FiDownload } from 'react-icons/fi';\r\n\r\n\r\nfunction DownloadIcon() {\r\n    return (\r\n        <div className='downloadIcon'>\r\n            <FiDownload className='downloadIcon_icon' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DownloadIcon\r\n","import React from 'react'\r\nimport './ExploreIcon.css'\r\nimport { RiCompass3Fill } from 'react-icons/ri';\r\n\r\n\r\nfunction ExploreIcon() {\r\n    return (\r\n        <div className='exploreIcon'>\r\n            <RiCompass3Fill className='exploreIcon_icon' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExploreIcon\r\n","import React from 'react'\r\nimport './AddServerIcon.css'\r\nimport { HiOutlinePlus } from 'react-icons/hi';\r\nimport db from './firebase';\r\nimport firebase from 'firebase';\r\n\r\nfunction AddServerIcon() {\r\n\r\n    const addServer = () => {\r\n        const serverName = prompt('Enter server name: ');\r\n        if (serverName) {\r\n            db.collection('servers').add({\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                serverName: serverName,\r\n            });\r\n        }\r\n    }\r\n    return (\r\n        <div className='addServerIcon' onClick={addServer}>\r\n            <HiOutlinePlus className='addServerIcon_icon' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddServerIcon\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport ServerIcon from './ServerIcon'\r\nimport MainPageIcon from './MainPageIcon'\r\nimport './Menu.css'\r\nimport avatar from './images/avatar.png';\r\nimport DownloadIcon from './DownloadIcon'\r\nimport ExploreIcon from './ExploreIcon'\r\nimport AddServerIcon from './AddServerIcon'\r\nimport db from './firebase';\r\n\r\n\r\nfunction Menu() {\r\n    const [servers, setServers] = useState([]);\r\n    const history = useHistory();\r\n\r\n    if (servers.length === 0) {\r\n        history.push('/');\r\n    }\r\n\r\n    useEffect(() => {\r\n        db.collection('servers').orderBy('timestamp').onSnapshot((snapshot) =>\r\n            setServers(snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                server: doc.data(),\r\n            })))\r\n        );\r\n\r\n    }, [])\r\n    return (\r\n        <div className='menu'>\r\n            <Link to='/' className='menu_link'>\r\n                <MainPageIcon image={avatar} />\r\n            </Link>\r\n\r\n            <div className='separator' />\r\n\r\n            {servers.map(({ id, server }) => (\r\n                <Link to='/channel' className='menu_link'>\r\n                    <ServerIcon key={id} id={id} title={server.serverName} />\r\n                </Link>\r\n            ))}\r\n\r\n            <AddServerIcon />\r\n            <ExploreIcon />\r\n            <div className='separator' />\r\n            <DownloadIcon />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu\r\n","import React, { useState } from 'react';\r\nimport './Login.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { auth } from './firebase';\r\n\r\nfunction Login() {\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const login = (event) => {\r\n        event.preventDefault();\r\n\r\n\r\n\r\n        auth.signInWithEmailAndPassword(email, password)\r\n            .then((auth) => {\r\n\r\n                history.push('/');\r\n            })\r\n            .catch((e) => alert(e.message));\r\n    };\r\n\r\n    const register = (event) => {\r\n        event.preventDefault();\r\n\r\n\r\n\r\n\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n            .then((auth) => {\r\n\r\n            })\r\n            .catch((e) => alert(e.message));\r\n    };\r\n    return (\r\n        <div className='login'>\r\n            <div className='login_form'>\r\n                <p className='login_form_title'>Welcome back!</p>\r\n                <p className='login_form_description'>We're so excited to see you again!</p>\r\n                <p className='login_form_emailText'>EMAIL</p>\r\n                <input className='login_form_emailInput' value={email} onChange={event => setEmail(event.target.value)} type='email' />\r\n                <p className='login_form_passwordText'>PASSWORD</p>\r\n                <input className='login_form_passwordInput' value={password} onChange={event => setPassword(event.target.value)} type='password' />\r\n                <button className='login_form_submit' onClick={login}>Login</button>\r\n                <button className='login_form_register' onClick={register}>Register</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport ChannelsList from './ChannelsList';\r\nimport Chat from './Chat';\r\nimport ChatMenu from './ChatMenu';\r\nimport Desktop from './Desktop';\r\nimport Friends from './Friends';\r\nimport MembersList from './MembersList';\r\nimport Menu from './Menu';\r\nimport { selectUser, login, logout } from './features/counter/userSlice';\r\nimport { auth } from './firebase'\r\nimport Login from './Login';\r\nimport firebase from 'firebase';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector(selectUser);\r\n\r\n  const color = (rand) => {\r\n    if (rand <= 0.16) {\r\n      return `rgb(255, ${Math.ceil(Math.random() * 255)}, 0)`;\r\n    }\r\n    else if (rand > 0.16 && rand <= 0.32) {\r\n      return `rgb(255, 0, ${Math.ceil(Math.random() * 255)})`;\r\n    }\r\n    else if (rand > 0.32 && rand <= 0.48) {\r\n      return `rgb(${Math.ceil(Math.random() * 255)}, 255, 0)`;\r\n    }\r\n    else if (rand > 0.48 && rand <= 0.64) {\r\n      return `rgb(0, 255, ${Math.ceil(Math.random() * 255)})`;\r\n    }\r\n    else if (rand > 0.64 && rand <= 0.8) {\r\n      return `rgb(${Math.ceil(Math.random() * 255)}, 0, 255)`;\r\n    }\r\n    else if (rand > 0.8 && rand <= 1) {\r\n      return `rgb(0, ${Math.ceil(Math.random() * 255)}, 255)`;\r\n    }\r\n  }\r\n\r\n  const u = firebase.auth().currentUser;\r\n  let avatarColor = color(Math.random());\r\n  if (user && !u.photoURL) {\r\n    u.updateProfile({\r\n      photoURL: avatarColor,\r\n    })\r\n    console.log(u);\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    auth.onAuthStateChanged((authUser) => {\r\n      console.log('user is:', authUser);\r\n      if (authUser) {\r\n        dispatch(login({\r\n          email: authUser.email,\r\n        }))\r\n\r\n      } else {\r\n        dispatch(logout());\r\n      }\r\n    });\r\n\r\n  }, [dispatch])\r\n  return (\r\n    <Router>\r\n      <div className=\"app\">\r\n        {user ?\r\n          <Switch>\r\n            <Route path='/channel'>\r\n              <Menu />\r\n              <ChannelsList />\r\n              <div className='chatField'>\r\n                <div className='chatField_menu'>\r\n                  <ChatMenu />\r\n                </div>\r\n                <div className='chatField_desktop'>\r\n                  <Chat />\r\n                  <MembersList />\r\n                </div>\r\n              </div>\r\n            </Route>\r\n            <Route path='/'>\r\n              <Menu />\r\n              <Friends />\r\n              <Desktop />\r\n            </Route>\r\n          </Switch>\r\n          :\r\n          <Route path='/'>\r\n            <Login />\r\n          </Route>\r\n        }\r\n      </div>\r\n    </Router >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../features/counter/userSlice';\r\nimport appReducer from '../features/counter/appSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n    app: appReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}