{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\eryko\\\\Desktop\\\\ReactProjects\\\\discord-clone\\\\src\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Login.css';\nimport { useHistory } from \"react-router-dom\";\nimport { auth } from './firebase';\n\nfunction Login() {\n  _s();\n\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const login = event => {\n    event.preventDefault();\n    auth.signInWithEmailAndPassword(email, password).then(auth => {\n      let avatarColor = color(Math.random());\n      let u = firebase.auth().currentUser;\n      console.log(u);\n\n      if (user) {\n        //&& !u.photoURL) {\n        u.updateProfile({\n          photoURL: avatarColor\n        });\n      }\n\n      history.push('/');\n    }).catch(e => alert(e.message));\n  };\n\n  const register = event => {\n    event.preventDefault();\n    auth.createUserWithEmailAndPassword(email, password).then(auth => {\n      history.push('/');\n    }).catch(e => alert(e.message));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login_form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login_form_title\",\n        children: \"Welcome back!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login_form_description\",\n        children: \"We're so excited to see you again!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login_form_emailText\",\n        children: \"EMAIL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"login_form_emailInput\",\n        value: email,\n        onChange: event => setEmail(event.target.value),\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login_form_passwordText\",\n        children: \"PASSWORD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"login_form_passwordInput\",\n        value: password,\n        onChange: event => setPassword(event.target.value),\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login_form_submit\",\n        onClick: login,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login_form_register\",\n        onClick: register,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"8BHiItuLC1AQqhTCtdjbT/NhK+g=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/eryko/Desktop/ReactProjects/discord-clone/src/Login.js"],"names":["React","useState","useHistory","auth","Login","history","email","setEmail","password","setPassword","login","event","preventDefault","signInWithEmailAndPassword","then","avatarColor","color","Math","random","u","firebase","currentUser","console","log","user","updateProfile","photoURL","push","catch","e","alert","message","register","createUserWithEmailAndPassword","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './Login.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { auth } from './firebase';\r\n\r\nfunction Login() {\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const login = (event) => {\r\n        event.preventDefault();\r\n\r\n        auth.signInWithEmailAndPassword(email, password)\r\n            .then((auth) => {\r\n                let avatarColor = color(Math.random());\r\n                let u = firebase.auth().currentUser;\r\n                console.log(u);\r\n                if (user) { //&& !u.photoURL) {\r\n                    u.updateProfile({\r\n                        photoURL: avatarColor,\r\n                    })\r\n                }\r\n                history.push('/');\r\n            })\r\n            .catch((e) => alert(e.message));\r\n    };\r\n\r\n    const register = (event) => {\r\n        event.preventDefault();\r\n\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n            .then((auth) => {\r\n                history.push('/');\r\n            })\r\n            .catch((e) => alert(e.message));\r\n    };\r\n    return (\r\n        <div className='login'>\r\n            <div className='login_form'>\r\n                <p className='login_form_title'>Welcome back!</p>\r\n                <p className='login_form_description'>We're so excited to see you again!</p>\r\n                <p className='login_form_emailText'>EMAIL</p>\r\n                <input className='login_form_emailInput' value={email} onChange={event => setEmail(event.target.value)} type='email' />\r\n                <p className='login_form_passwordText'>PASSWORD</p>\r\n                <input className='login_form_passwordInput' value={password} onChange={event => setPassword(event.target.value)} type='password' />\r\n                <button className='login_form_submit' onClick={login}>Login</button>\r\n                <button className='login_form_register' onClick={register}>Register</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}