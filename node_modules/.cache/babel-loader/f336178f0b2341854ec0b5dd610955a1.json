{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\eryko\\\\Desktop\\\\ReactProjects\\\\discord-clone\\\\src\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Chat.css';\nimport { MdAddCircle } from \"react-icons/md\";\nimport { FaGift, FaSmile } from \"react-icons/fa\";\nimport { RiFileGifFill } from \"react-icons/ri\";\nimport { MdSend } from \"react-icons/md\";\nimport Message from './Message';\nimport { useEffect } from 'react';\nimport db from './firebase';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from './features/counter/userSlice';\nimport { selectCategoryId, selectChannelId, selectChannelName, selectServerId } from './features/counter/appSlice';\nimport firebase from 'firebase';\nimport { FaHashtag } from \"react-icons/fa\";\n\nfunction Chat() {\n  _s();\n\n  const user = useSelector(selectUser);\n  const u = firebase.auth().currentUser;\n  const categoryId = useSelector(selectCategoryId);\n  const serverId = useSelector(selectServerId);\n  const channelId = useSelector(selectChannelId);\n  const channelName = useSelector(selectChannelName);\n  const [messages, setMessages] = useState([]);\n  const [messageText, setMessageText] = useState();\n  const [messagesEnd, setMessagesEnd] = useState();\n  const [serverName] = useState('server');\n\n  const sendMessage = () => {\n    console.log(channelId);\n\n    if (channelId) {\n      let nick = '';\n      if (user) nick = user.email.slice(0, user.email.indexOf('@'));\n\n      const dateEdit = date => {\n        if (date < 10) return `0${date}`;else return date;\n      };\n\n      let d = new Date();\n      let day = d.getDate();\n      let month = d.getMonth();\n      let year = d.getFullYear();\n      let hours = d.getHours();\n      let minutes = d.getMinutes();\n      let date = `${dateEdit(hours)}:${dateEdit(minutes)} \\xa0 ${dateEdit(day)}/${dateEdit(month)}/${dateEdit(year)}`;\n      db.collection('servers').doc(serverId).collection('categories').doc(categoryId).collection('channels').doc(channelId).collection('messages').add({\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        message: messageText,\n        nick,\n        date,\n        avatarColor: u.photoURL\n      });\n      setMessageText('');\n    }\n  };\n\n  useEffect(() => {\n    if (channelId) {\n      db.collection('servers').doc(serverId).collection('categories').doc(categoryId).collection('channels').doc(channelId).collection(\"messages\").orderBy('timestamp').onSnapshot(snapshot => setMessages(snapshot.docs.map(doc => ({\n        id: doc.id,\n        msg: doc.data()\n      }))));\n    }\n  }, [channelId, categoryId, serverId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_messages\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_messages_top\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_messages_bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_messages_bottom_emptyChannel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat_messages_bottom_emptyChannel_icon\",\n            children: /*#__PURE__*/_jsxDEV(FaHashtag, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 81\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"chat_messages_bottom_emptyChannel_welcome\",\n            children: [\"Welcome to #\", channelName ? channelName : serverName, \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), channelName ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"chat_messages_bottom_emptyChannel_description\",\n            children: [\"This is the start of the #\", channelName ? channelName : serverName, \" channel.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"chat_messages_bottom_emptyChannel_description\",\n            children: \"Choose category and channel.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), messages.map(({\n          id,\n          msg\n        }) => /*#__PURE__*/_jsxDEV(Message, {\n          id: id,\n          message: msg.message,\n          nick: msg.nick,\n          date: msg.date,\n          avatarColor: msg.avatarColor\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)), messagesEnd ? messagesEnd.scrollIntoView({\n          behavior: 'smooth'\n        }) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: el => setMessagesEnd(el)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_sendTextField\",\n      children: [/*#__PURE__*/_jsxDEV(MdAddCircle, {\n        className: \"chat_sendTextField_icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), channelName ? /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"chat_sendTextField_input\",\n        onChange: event => setMessageText(event.target.value),\n        placeholder: `Message #${channelName}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"chat_sendTextField_input\",\n        onChange: event => setMessageText(event.target.value),\n        placeholder: `Message #${serverName}`,\n        readOnly: \"readonly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(MdSend, {\n        className: \"chat_sendTextField_send\",\n        onClick: () => {\n          if (channelName && messageText.length > 0) sendMessage();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FaGift, {\n        className: \"chat_sendTextField_icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RiFileGifFill, {\n        className: \"chat_sendTextField_icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FaSmile, {\n        className: \"chat_sendTextField_icon\",\n        onClick: () => console.log(u.photoURL)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"AKxP16OzI/PnYABI1XZTsUPsZK8=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/eryko/Desktop/ReactProjects/discord-clone/src/Chat.js"],"names":["React","useState","MdAddCircle","FaGift","FaSmile","RiFileGifFill","MdSend","Message","useEffect","db","useSelector","selectUser","selectCategoryId","selectChannelId","selectChannelName","selectServerId","firebase","FaHashtag","Chat","user","u","auth","currentUser","categoryId","serverId","channelId","channelName","messages","setMessages","messageText","setMessageText","messagesEnd","setMessagesEnd","serverName","sendMessage","console","log","nick","email","slice","indexOf","dateEdit","date","d","Date","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","collection","doc","add","timestamp","firestore","FieldValue","serverTimestamp","message","avatarColor","photoURL","orderBy","onSnapshot","snapshot","docs","map","id","msg","data","scrollIntoView","behavior","el","event","target","value","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './Chat.css';\r\nimport { MdAddCircle } from \"react-icons/md\";\r\nimport { FaGift, FaSmile } from \"react-icons/fa\";\r\nimport { RiFileGifFill } from \"react-icons/ri\";\r\nimport { MdSend } from \"react-icons/md\";\r\nimport Message from './Message';\r\nimport { useEffect } from 'react';\r\nimport db from './firebase';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from './features/counter/userSlice';\r\nimport { selectCategoryId, selectChannelId, selectChannelName, selectServerId } from './features/counter/appSlice';\r\nimport firebase from 'firebase';\r\nimport { FaHashtag } from \"react-icons/fa\";\r\n\r\nfunction Chat() {\r\n    const user = useSelector(selectUser);\r\n    const u = firebase.auth().currentUser;\r\n    const categoryId = useSelector(selectCategoryId);\r\n    const serverId = useSelector(selectServerId);\r\n    const channelId = useSelector(selectChannelId);\r\n    const channelName = useSelector(selectChannelName);\r\n    const [messages, setMessages] = useState([]);\r\n    const [messageText, setMessageText] = useState();\r\n    const [messagesEnd, setMessagesEnd] = useState();\r\n    const [serverName] = useState('server');\r\n\r\n\r\n    const sendMessage = () => {\r\n        console.log(channelId)\r\n        if (channelId) {\r\n            let nick = ''\r\n            if (user) nick = user.email.slice(0, user.email.indexOf('@'));\r\n\r\n            const dateEdit = (date) => {\r\n                if (date < 10) return `0${date}`\r\n                else return date\r\n            }\r\n            let d = new Date();\r\n            let day = d.getDate();\r\n            let month = d.getMonth();\r\n            let year = d.getFullYear();\r\n            let hours = d.getHours();\r\n            let minutes = d.getMinutes();\r\n            let date = `${dateEdit(hours)}:${dateEdit(minutes)} \\xa0 ${dateEdit(day)}/${dateEdit(month)}/${dateEdit(year)}`;\r\n\r\n            db.collection('servers').doc(serverId).collection('categories').doc(categoryId).collection('channels').doc(channelId).collection('messages').add({\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                message: messageText,\r\n                nick,\r\n                date,\r\n                avatarColor: u.photoURL,\r\n            })\r\n            setMessageText('');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (channelId) {\r\n            db.collection('servers').doc(serverId).collection('categories').doc(categoryId).collection('channels').doc(channelId).collection(\"messages\").orderBy('timestamp').onSnapshot((snapshot) =>\r\n                setMessages(\r\n                    snapshot.docs.map((doc) => ({\r\n                        id: doc.id,\r\n                        msg: doc.data(),\r\n                    }))\r\n                )\r\n            );\r\n        }\r\n    }, [channelId, categoryId, serverId])\r\n    return (\r\n        <div className='chat'>\r\n            <div className='chat_messages'>\r\n                <div className='chat_messages_top'>\r\n\r\n                </div>\r\n                <div className='chat_messages_bottom' >\r\n                    <div className='chat_messages_bottom_emptyChannel'>\r\n                        <div className='chat_messages_bottom_emptyChannel_icon'><FaHashtag /></div>\r\n                        <p className='chat_messages_bottom_emptyChannel_welcome'>Welcome to #{channelName ? channelName : serverName}!</p>\r\n                        {\r\n                            channelName\r\n                                ?\r\n                                <p className='chat_messages_bottom_emptyChannel_description'>This is the start of the #{channelName ? channelName : serverName} channel.</p>\r\n                                :\r\n                                <p className='chat_messages_bottom_emptyChannel_description'>Choose category and channel.</p>\r\n                        }\r\n                    </div>\r\n                    {messages.map(({ id, msg }) => (\r\n                        <Message key={id} id={id} message={msg.message} nick={msg.nick} date={msg.date} avatarColor={msg.avatarColor} />\r\n                    ))}\r\n                    {(messagesEnd)\r\n                        ?\r\n                        messagesEnd.scrollIntoView({ behavior: 'smooth' })\r\n                        :\r\n                        null\r\n                    }\r\n\r\n\r\n\r\n                    <div ref={(el) => setMessagesEnd(el)}>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='chat_sendTextField'>\r\n                <MdAddCircle className='chat_sendTextField_icon' />\r\n                {\r\n                    channelName\r\n                        ?\r\n                        <input className='chat_sendTextField_input' onChange={(event) => setMessageText(event.target.value)} placeholder={`Message #${channelName}`} />\r\n                        :\r\n                        <input className='chat_sendTextField_input' onChange={(event) => setMessageText(event.target.value)} placeholder={`Message #${serverName}`} readOnly='readonly' />\r\n                }\r\n                <MdSend className='chat_sendTextField_send' onClick={() => { if (channelName && messageText.length > 0) sendMessage() }} />\r\n                <FaGift className='chat_sendTextField_icon' />\r\n                <RiFileGifFill className='chat_sendTextField_icon' />\r\n                <FaSmile className='chat_sendTextField_icon' onClick={() => console.log(u.photoURL)} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n"]},"metadata":{},"sourceType":"module"}