{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\eryko\\\\Desktop\\\\ReactProjects\\\\discord-clone\\\\src\\\\MobileChannelsList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './MobileChannelsList.css';\nimport UserContainer from './UserContainer';\nimport Category from './Category';\nimport ChannelsListHeader from './ChannelsListHeader';\nimport db from './firebase';\nimport { useSelector } from 'react-redux';\nimport { selectServerId } from './features/counter/appSlice';\n\nfunction MobileChannelsList() {\n  _s();\n\n  const serverId = useSelector(selectServerId);\n  const [categories, setCategories] = useState([]); // insert data from database to categories array\n\n  useEffect(() => {\n    if (serverId) {\n      db.collection('servers').doc(serverId).collection('categories').orderBy('timestamp').onSnapshot(snapshot => {\n        setCategories(snapshot.docs.map(doc => ({\n          id: doc.id,\n          category: doc.data()\n        })));\n      });\n    }\n  }, [serverId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mobileChannelsList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobileChannelsList_top\",\n      children: [/*#__PURE__*/_jsxDEV(ChannelsListHeader, {\n        title: \"Channel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobileChannelsList_body\",\n        children: // render channels from array\n        categories.map(({\n          id,\n          category\n        }) => /*#__PURE__*/_jsxDEV(Category, {\n          id: id,\n          title: category.categoryName\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UserContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MobileChannelsList, \"ZsEvM9IeCM8alIgdKgPN16kZt10=\", false, function () {\n  return [useSelector];\n});\n\n_c = MobileChannelsList;\nexport default MobileChannelsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MobileChannelsList\");","map":{"version":3,"sources":["C:/Users/eryko/Desktop/ReactProjects/discord-clone/src/MobileChannelsList.js"],"names":["React","useState","useEffect","UserContainer","Category","ChannelsListHeader","db","useSelector","selectServerId","MobileChannelsList","serverId","categories","setCategories","collection","doc","orderBy","onSnapshot","snapshot","docs","map","id","category","data","categoryName"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,0BAAP;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,QAA+B,6BAA/B;;AAEA,SAASC,kBAAT,GAA8B;AAAA;;AAC1B,QAAMC,QAAQ,GAAGH,WAAW,CAACC,cAAD,CAA5B;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C,CAF0B,CAI1B;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,QAAJ,EAAc;AACVJ,MAAAA,EAAE,CAACO,UAAH,CAAc,SAAd,EAAyBC,GAAzB,CAA6BJ,QAA7B,EAAuCG,UAAvC,CAAkD,YAAlD,EAAgEE,OAAhE,CAAwE,WAAxE,EAAqFC,UAArF,CAAiGC,QAAD,IAAc;AAC1GL,QAAAA,aAAa,CACTK,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBL,GAAD,KAAU;AACxBM,UAAAA,EAAE,EAAEN,GAAG,CAACM,EADgB;AAExBC,UAAAA,QAAQ,EAAEP,GAAG,CAACQ,IAAJ;AAFc,SAAV,CAAlB,CADS,CAAb;AAMH,OAPD;AAQH;AACJ,GAXQ,EAWN,CAACZ,QAAD,CAXM,CAAT;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,8BACI,QAAC,kBAAD;AAAoB,QAAA,KAAK,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,kBACK;AACDC,QAAAA,UAAU,CAACQ,GAAX,CAAe,CAAC;AAAEC,UAAAA,EAAF;AAAMC,UAAAA;AAAN,SAAD,kBACX,QAAC,QAAD;AAAmB,UAAA,EAAE,EAAED,EAAvB;AAA2B,UAAA,KAAK,EAAEC,QAAQ,CAACE;AAA3C,WAAeH,EAAf;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GAhCQX,kB;UACYF,W;;;KADZE,kB;AAkCT,eAAeA,kBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport './MobileChannelsList.css'\r\nimport UserContainer from './UserContainer'\r\nimport Category from './Category'\r\nimport ChannelsListHeader from './ChannelsListHeader'\r\nimport db from './firebase'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectServerId } from './features/counter/appSlice';\r\n\r\nfunction MobileChannelsList() {\r\n    const serverId = useSelector(selectServerId);\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    // insert data from database to categories array\r\n    useEffect(() => {\r\n        if (serverId) {\r\n            db.collection('servers').doc(serverId).collection('categories').orderBy('timestamp').onSnapshot((snapshot) => {\r\n                setCategories(\r\n                    snapshot.docs.map((doc) => ({\r\n                        id: doc.id,\r\n                        category: doc.data(),\r\n                    }))\r\n                )\r\n            })\r\n        }\r\n    }, [serverId])\r\n\r\n    return (\r\n        <div className='mobileChannelsList'>\r\n            <div className='mobileChannelsList_top'>\r\n                <ChannelsListHeader title='Channel' />\r\n                <div className='mobileChannelsList_body'>\r\n                    {// render channels from array\r\n                    categories.map(({ id, category }) => (\r\n                        <Category key={id} id={id} title={category.categoryName} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <UserContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MobileChannelsList\r\n"]},"metadata":{},"sourceType":"module"}