{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\eryko\\\\Desktop\\\\ReactProjects\\\\discord-clone\\\\src\\\\Category.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './Category.css';\nimport { FiChevronDown, FiChevronRight } from 'react-icons/fi';\nimport { FaHashtag } from \"react-icons/fa\";\nimport { GoUnmute } from \"react-icons/go\";\nimport Channel from './Channel';\nimport db from './firebase';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCategoryId, selectServerId, setCategoryInfo, setChannelInfo } from './features/counter/appSlice';\nimport firebase from 'firebase';\nimport { BsX, BsPlus } from \"react-icons/bs\";\n\nfunction Category({\n  id,\n  title\n}) {\n  _s();\n\n  const categoryId = useSelector(selectCategoryId);\n  const serverId = useSelector(selectServerId);\n  const [channels, setChannels] = useState([]);\n  const [channelName, setChannelName] = useState('');\n  const [channelPrompt, setChannelPrompt] = useState(false);\n  const dispatch = useDispatch(); // add channel to database\n\n  const addChannel = () => {\n    if (channelName) {\n      db.collection('servers').doc(serverId).collection('categories').doc(categoryId).collection('channels').add({\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        channelName: channelName\n      });\n    }\n  }; // remove category from database\n\n\n  const removeCategory = () => {\n    const category = db.collection('servers').doc(serverId).collection('categories').doc(categoryId);\n    const channel = category.collection('channels'); // remove data belonging to this category\n\n    channel.get().then(res => {\n      res.forEach(element => {\n        element.ref.collection('messages').get().then(res => {\n          res.forEach(element => {\n            element.ref.delete();\n          });\n          element.ref.delete();\n        });\n        element.ref.delete();\n      });\n    }); // delete category\n\n    category.delete(); // set local info about removed data to null\n\n    dispatch(setChannelInfo({\n      channelId: null\n    }));\n    dispatch(setCategoryInfo({\n      categoryId: null\n    }));\n  }; // insert data from database to channels array\n\n\n  useEffect(() => {\n    if (categoryId) {\n      db.collection('servers').doc(serverId).collection('categories').doc(categoryId).collection('channels').orderBy('timestamp').onSnapshot(snapshot => setChannels(snapshot.docs.map(doc => ({\n        id: doc.id,\n        channel: doc.data()\n      }))));\n    }\n  }, [categoryId, serverId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category\",\n    onClick: () => {\n      // send info about choosen category\n      if (id !== categoryId) {\n        dispatch(setChannelInfo({\n          channelId: null,\n          channelName: null\n        }));\n        dispatch(setCategoryInfo({\n          categoryId: id,\n          categoryName: title\n        }));\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category_header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category_header_title\",\n        children: [id === categoryId ? /*#__PURE__*/_jsxDEV(FiChevronDown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(FiChevronRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category_header_menu\",\n        children: id === categoryId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(BsPlus, {\n            className: \"category_header_menu_add\",\n            onClick: () => setChannelPrompt(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(BsX, {\n            className: \"category_header_menu_remove\",\n            onClick: removeCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), channelPrompt ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category_prompt\",\n        onClick: e => e.stopPropagation(),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category_prompt_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"category_prompt_field_title\",\n            children: \"Create Channel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"addServerIcon_prompt_field_choose\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"addServerIcon_prompt_field_choose_textChannel\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"channel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"addServerIcon_prompt_field_choose_textChannel_radiomark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(FaHashtag, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Text Channel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"addServerIcon_prompt_field_choose_voiceChannel\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"channel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"addServerIcon_prompt_field_choose_voiceChannel_radiomark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(GoUnmute, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Voice Channel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category_prompt_field_insert\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"category_prompt_field_insert_title\",\n              children: \"CHANNEL NAME\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"category_prompt_field_insert_input\",\n              onChange: e => setChannelName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category_prompt_field_buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"category_prompt_field_buttons_cancel\",\n              onClick: () => setChannelPrompt(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"category_prompt_field_buttons_submit\",\n              onClick: () => {\n                if (channelName.length > 0) addChannel();\n                setChannelPrompt(false);\n              },\n              children: \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category_channels\",\n      children: // render channels from array\n      id === categoryId ? channels.map(({\n        id,\n        channel\n      }) => /*#__PURE__*/_jsxDEV(Channel, {\n        id: id,\n        title: channel.channelName\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 29\n      }, this)) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Category, \"/T8KTFeDeufhVizBGvMy36R0gms=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Category;\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["C:/Users/eryko/Desktop/ReactProjects/discord-clone/src/Category.js"],"names":["React","useEffect","useState","FiChevronDown","FiChevronRight","FaHashtag","GoUnmute","Channel","db","useDispatch","useSelector","selectCategoryId","selectServerId","setCategoryInfo","setChannelInfo","firebase","BsX","BsPlus","Category","id","title","categoryId","serverId","channels","setChannels","channelName","setChannelName","channelPrompt","setChannelPrompt","dispatch","addChannel","collection","doc","add","timestamp","firestore","FieldValue","serverTimestamp","removeCategory","category","channel","get","then","res","forEach","element","ref","delete","channelId","orderBy","onSnapshot","snapshot","docs","map","data","categoryName","e","stopPropagation","target","value","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './Category.css'\r\nimport { FiChevronDown, FiChevronRight } from 'react-icons/fi'\r\nimport { FaHashtag } from \"react-icons/fa\";\r\nimport { GoUnmute } from \"react-icons/go\";\r\nimport Channel from './Channel'\r\nimport db from './firebase'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectCategoryId, selectServerId, setCategoryInfo, setChannelInfo } from './features/counter/appSlice'\r\nimport firebase from 'firebase'\r\nimport { BsX, BsPlus } from \"react-icons/bs\";\r\n\r\nfunction Category({ id, title }) {\r\n    const categoryId = useSelector(selectCategoryId)\r\n    const serverId = useSelector(selectServerId)\r\n    const [channels, setChannels] = useState([])\r\n    const [channelName, setChannelName] = useState('');\r\n    const [channelPrompt, setChannelPrompt] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    // add channel to database\r\n    const addChannel = () => {\r\n        if (channelName) {\r\n            db.collection('servers').doc(serverId).collection('categories').doc(categoryId).collection('channels').add({\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                channelName: channelName,\r\n            });\r\n        }\r\n    }\r\n\r\n    // remove category from database\r\n    const removeCategory = () => {\r\n        const category = db.collection('servers').doc(serverId).collection('categories').doc(categoryId);\r\n        const channel = category.collection('channels');\r\n\r\n        // remove data belonging to this category\r\n        channel.get().then((res) => {\r\n            res.forEach((element) => {\r\n                element.ref.collection('messages').get().then((res) => {\r\n                    res.forEach((element) => {\r\n                        element.ref.delete();\r\n                    });\r\n                    element.ref.delete();\r\n                });\r\n                element.ref.delete();\r\n            });\r\n        });\r\n\r\n        // delete category\r\n        category.delete();\r\n\r\n        // set local info about removed data to null\r\n        dispatch(\r\n            setChannelInfo({\r\n                channelId: null,\r\n            })\r\n        );\r\n\r\n        dispatch(\r\n            setCategoryInfo({\r\n                categoryId: null,\r\n            })\r\n        );\r\n    }\r\n\r\n    // insert data from database to channels array\r\n    useEffect(() => {\r\n        if (categoryId) {\r\n            db.collection('servers').doc(serverId).collection('categories').doc(categoryId).collection('channels').orderBy('timestamp').onSnapshot((snapshot) =>\r\n                setChannels(snapshot.docs.map((doc) => ({\r\n                    id: doc.id,\r\n                    channel: doc.data(),\r\n                }))));\r\n        }\r\n\r\n    }, [categoryId, serverId])\r\n    return (\r\n        <div className='category' onClick={() => {\r\n            // send info about choosen category\r\n            if (id !== categoryId) {\r\n                dispatch(\r\n                    setChannelInfo({\r\n                        channelId: null,\r\n                        channelName: null,\r\n                    })\r\n                )\r\n\r\n                dispatch(\r\n                    setCategoryInfo({\r\n                        categoryId: id,\r\n                        categoryName: title,\r\n                    })\r\n                )\r\n            }\r\n\r\n        }}>\r\n            <div className='category_header'>\r\n                <div className='category_header_title'>\r\n                    {id === categoryId\r\n                        ?\r\n                        <FiChevronDown />\r\n                        :\r\n                        <FiChevronRight />\r\n                    }\r\n                    <p>{title}</p>\r\n                </div>\r\n                <div className='category_header_menu'>\r\n                    {id === categoryId\r\n                        ?\r\n                        <>\r\n                            <BsPlus className='category_header_menu_add' onClick={() => setChannelPrompt(true)} />\r\n                            <BsX className='category_header_menu_remove' onClick={removeCategory} />\r\n                        </>\r\n                        : null\r\n                    }\r\n                </div>\r\n                {\r\n                    channelPrompt\r\n                        ?\r\n                        <div className='category_prompt' onClick={(e) => e.stopPropagation()}>\r\n                            <div className='category_prompt_field'>\r\n                                <p className='category_prompt_field_title'>Create Channel</p>\r\n                                <div className='addServerIcon_prompt_field_choose'>\r\n                                    <p></p>\r\n                                    <label className='addServerIcon_prompt_field_choose_textChannel'>\r\n                                        <input type='radio' name='channel' />\r\n                                        <span className='addServerIcon_prompt_field_choose_textChannel_radiomark'></span>\r\n                                        <FaHashtag />\r\n                                        <p>Text Channel</p>\r\n                                    </label>\r\n                                    <label className='addServerIcon_prompt_field_choose_voiceChannel'>\r\n                                        <input type='radio' name='channel' />\r\n                                        <span className='addServerIcon_prompt_field_choose_voiceChannel_radiomark'></span>\r\n                                        <GoUnmute />\r\n                                        <p>Voice Channel</p>\r\n                                    </label>\r\n                                </div>\r\n                                <div className='category_prompt_field_insert'>\r\n                                    <p className='category_prompt_field_insert_title'>CHANNEL NAME</p>\r\n                                    <input className='category_prompt_field_insert_input' onChange={(e) => setChannelName(e.target.value)} />\r\n                                </div>\r\n                                <div className='category_prompt_field_buttons'>\r\n                                    <button className='category_prompt_field_buttons_cancel' onClick={() => setChannelPrompt(false)}>Cancel</button>\r\n                                    <button className='category_prompt_field_buttons_submit' onClick={() => { if (channelName.length > 0) addChannel(); setChannelPrompt(false) }}>Create</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        null\r\n                }\r\n            </div>\r\n            <div className='category_channels'>\r\n                {// render channels from array\r\n                    id === categoryId\r\n                        ?\r\n                        channels.map(({ id, channel }) => (\r\n                            <Channel key={id} id={id} title={channel.channelName} />\r\n                        ))\r\n                        : null\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Category\r\n"]},"metadata":{},"sourceType":"module"}