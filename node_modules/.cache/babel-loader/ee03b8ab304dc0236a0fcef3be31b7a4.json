{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\eryko\\\\Desktop\\\\ReactProjects\\\\discord-clone\\\\src\\\\ServerIcon.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectServerId, setServerInfo, selectCategoryId, setCategoryInfo } from './features/counter/appSlice';\nimport './ServerIcon.css';\nimport { BsX } from \"react-icons/bs\";\nimport db from './firebase';\n\nfunction ServerIcon({\n  id,\n  title\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const serverId = useSelector(selectServerId);\n\n  const removeServer = () => {\n    const server = db.collection('servers').doc(serverId);\n    const category = server.collection('categories');\n    category.get().then(res => {\n      res.forEach(element => {\n        element.ref.delete();\n      });\n    });\n    server.delete();\n    dispatch(setServerInfo({\n      serverId: null\n    }), setCategoryInfo({\n      categoryId: null\n    }), setChannelInfo({\n      channelId: null\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"serverIcon\",\n    onClick: () => {\n      dispatch(setServerInfo({\n        serverId: id,\n        serverName: title\n      }));\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"serverIcon_title\",\n      children: title ? title[0] : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), id === serverId ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"serverIcon_remove\",\n      onClick: removeServer,\n      children: /*#__PURE__*/_jsxDEV(BsX, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 79\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ServerIcon, \"cyZQlon+sn17lZF0/rpo5VAzThU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ServerIcon;\nexport default ServerIcon;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServerIcon\");","map":{"version":3,"sources":["C:/Users/eryko/Desktop/ReactProjects/discord-clone/src/ServerIcon.js"],"names":["React","useDispatch","useSelector","selectServerId","setServerInfo","selectCategoryId","setCategoryInfo","BsX","db","ServerIcon","id","title","dispatch","serverId","removeServer","server","collection","doc","category","get","then","res","forEach","element","ref","delete","categoryId","setChannelInfo","channelId","serverName"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,EAAyBC,aAAzB,EAAwCC,gBAAxC,EAA0DC,eAA1D,QAAiF,6BAAjF;AACA,OAAO,kBAAP;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,EAAP,MAAe,YAAf;;AAGA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAApB,EAAmC;AAAA;;AAC/B,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,QAAQ,GAAGX,WAAW,CAACC,cAAD,CAA5B;;AAEA,QAAMW,YAAY,GAAG,MAAM;AACvB,UAAMC,MAAM,GAAGP,EAAE,CAACQ,UAAH,CAAc,SAAd,EAAyBC,GAAzB,CAA6BJ,QAA7B,CAAf;AACA,UAAMK,QAAQ,GAAGH,MAAM,CAACC,UAAP,CAAkB,YAAlB,CAAjB;AAEAE,IAAAA,QAAQ,CAACC,GAAT,GAAeC,IAAf,CAAoBC,GAAG,IAAI;AACvBA,MAAAA,GAAG,CAACC,OAAJ,CAAYC,OAAO,IAAI;AACnBA,QAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACH,OAFD;AAGH,KAJD;AAKAV,IAAAA,MAAM,CAACU,MAAP;AACAb,IAAAA,QAAQ,CACJR,aAAa,CAAC;AACVS,MAAAA,QAAQ,EAAE;AADA,KAAD,CADT,EAIJP,eAAe,CAAC;AACZoB,MAAAA,UAAU,EAAE;AADA,KAAD,CAJX,EAOJC,cAAc,CAAC;AACXC,MAAAA,SAAS,EAAE;AADA,KAAD,CAPV,CAAR;AAWH,GArBD;;AAsBA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,OAAO,EAAE,MAAM;AACvChB,MAAAA,QAAQ,CACJR,aAAa,CAAC;AACVS,QAAAA,QAAQ,EAAEH,EADA;AAEVmB,QAAAA,UAAU,EAAElB;AAFF,OAAD,CADT,CAAR;AAMH,KAPD;AAAA,4BAQI;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA,gBAAiCA,KAAK,GAAGA,KAAK,CAAC,CAAD,CAAR,GAAc;AAApD;AAAA;AAAA;AAAA;AAAA,YARJ,EAUQD,EAAE,KAAKG,QAAP,gBACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAmC,MAAA,OAAO,EAAEC,YAA5C;AAAA,6BAA0D,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAA1D;AAAA;AAAA;AAAA;AAAA,YADJ,GAGI,IAbZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GA7CQL,U;UACYR,W,EACAC,W;;;KAFZO,U;AA+CT,eAAeA,UAAf","sourcesContent":["import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectServerId, setServerInfo, selectCategoryId, setCategoryInfo } from './features/counter/appSlice';\r\nimport './ServerIcon.css'\r\nimport { BsX } from \"react-icons/bs\";\r\nimport db from './firebase';\r\n\r\n\r\nfunction ServerIcon({ id, title }) {\r\n    const dispatch = useDispatch();\r\n    const serverId = useSelector(selectServerId);\r\n\r\n    const removeServer = () => {\r\n        const server = db.collection('servers').doc(serverId);\r\n        const category = server.collection('categories');\r\n\r\n        category.get().then(res => {\r\n            res.forEach(element => {\r\n                element.ref.delete();\r\n            });\r\n        });\r\n        server.delete();\r\n        dispatch(\r\n            setServerInfo({\r\n                serverId: null,\r\n            }),\r\n            setCategoryInfo({\r\n                categoryId: null,\r\n            }),\r\n            setChannelInfo({\r\n                channelId: null,\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className='serverIcon' onClick={() => {\r\n            dispatch(\r\n                setServerInfo({\r\n                    serverId: id,\r\n                    serverName: title,\r\n                })\r\n            )\r\n        }}>\r\n            <p className='serverIcon_title'>{title ? title[0] : null}</p>\r\n            {\r\n                id === serverId ?\r\n                    <div className='serverIcon_remove' onClick={removeServer}><BsX /></div>\r\n                    :\r\n                    null\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ServerIcon\r\n"]},"metadata":{},"sourceType":"module"}