{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\eryko\\\\Desktop\\\\ReactProjects\\\\discord-clone\\\\src\\\\ServerIcon.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectServerId, setServerInfo, setChannelInfo, setCategoryInfo, selectCategoryId, selectChannelId } from './features/counter/appSlice';\nimport './ServerIcon.css';\nimport { BsX } from \"react-icons/bs\";\nimport db from './firebase';\n\nfunction ServerIcon({\n  id,\n  title\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const serverId = useSelector(selectServerId);\n  const categoryId = useSelector(selectCategoryId);\n  const channelId = useSelector(selectChannelId);\n\n  const removeServer = () => {\n    const server = db.collection('servers');\n    server.doc(serverId).collection('categories').get().then(res => {\n      res.forEach(element => {\n        element.ref.collection('channels').get().then(res => {\n          res.forEach(element => {\n            element.ref.collection('messages').get().then(res => {\n              res.forEach(element => {\n                element.ref.delete();\n              });\n              element.ref.delete();\n            });\n            element.ref.delete();\n          });\n          element.ref.delete();\n        });\n        element.ref.delete();\n      });\n    });\n    server.doc(serverId).delete();\n    dispatch(setChannelInfo({\n      channelId: null\n    }));\n    dispatch(setCategoryInfo({\n      categoryId: null\n    }));\n    dispatch(setServerInfo({\n      serverId: null\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"serverIcon\",\n    onClick: () => {\n      if (id != serverId) {\n        dispatch(setServerInfo({\n          serverId: id,\n          serverName: title\n        }));\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"serverIcon_title\",\n      children: title ? title[0] : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), id === serverId ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"serverIcon_remove\",\n      onClick: removeServer,\n      children: /*#__PURE__*/_jsxDEV(BsX, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 79\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ServerIcon, \"MQtSq/rM1Jsn4yS9OrY/KRJ/6dE=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ServerIcon;\nexport default ServerIcon;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServerIcon\");","map":{"version":3,"sources":["C:/Users/eryko/Desktop/ReactProjects/discord-clone/src/ServerIcon.js"],"names":["React","useDispatch","useSelector","selectServerId","setServerInfo","setChannelInfo","setCategoryInfo","selectCategoryId","selectChannelId","BsX","db","ServerIcon","id","title","dispatch","serverId","categoryId","channelId","removeServer","server","collection","doc","get","then","res","forEach","element","ref","delete","serverName"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,EAAyBC,aAAzB,EAAwCC,cAAxC,EAAwDC,eAAxD,EAAyEC,gBAAzE,EAA2FC,eAA3F,QAAkH,6BAAlH;AACA,OAAO,kBAAP;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,EAAP,MAAe,YAAf;;AAGA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAApB,EAAmC;AAAA;;AAC/B,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,QAAQ,GAAGb,WAAW,CAACC,cAAD,CAA5B;AACA,QAAMa,UAAU,GAAGd,WAAW,CAACK,gBAAD,CAA9B;AACA,QAAMU,SAAS,GAAGf,WAAW,CAACM,eAAD,CAA7B;;AAEA,QAAMU,YAAY,GAAG,MAAM;AACvB,UAAMC,MAAM,GAAGT,EAAE,CAACU,UAAH,CAAc,SAAd,CAAf;AAGAD,IAAAA,MAAM,CAACE,GAAP,CAAWN,QAAX,EAAqBK,UAArB,CAAgC,YAAhC,EAA8CE,GAA9C,GAAoDC,IAApD,CAA0DC,GAAD,IAAS;AAC9DA,MAAAA,GAAG,CAACC,OAAJ,CAAaC,OAAD,IAAa;AACrBA,QAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ,CAAuB,UAAvB,EAAmCE,GAAnC,GAAyCC,IAAzC,CAA+CC,GAAD,IAAS;AACnDA,UAAAA,GAAG,CAACC,OAAJ,CAAaC,OAAD,IAAa;AACrBA,YAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ,CAAuB,UAAvB,EAAmCE,GAAnC,GAAyCC,IAAzC,CAA+CC,GAAD,IAAS;AACnDA,cAAAA,GAAG,CAACC,OAAJ,CAAaC,OAAD,IAAa;AACrBA,gBAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACH,eAFD;AAGAF,cAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACH,aALD;AAMAF,YAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACH,WARD;AASAF,UAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACH,SAXD;AAYAF,QAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACH,OAdD;AAeH,KAhBD;AAoBAT,IAAAA,MAAM,CAACE,GAAP,CAAWN,QAAX,EAAqBa,MAArB;AAEAd,IAAAA,QAAQ,CACJT,cAAc,CAAC;AACXY,MAAAA,SAAS,EAAE;AADA,KAAD,CADV,CAAR;AAMAH,IAAAA,QAAQ,CACJR,eAAe,CAAC;AACZU,MAAAA,UAAU,EAAE;AADA,KAAD,CADX,CAAR;AAMAF,IAAAA,QAAQ,CACJV,aAAa,CAAC;AACVW,MAAAA,QAAQ,EAAE;AADA,KAAD,CADT,CAAR;AAKH,GA3CD;;AA4CA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,OAAO,EAAE,MAAM;AACvC,UAAIH,EAAE,IAAIG,QAAV,EAAoB;AAChBD,QAAAA,QAAQ,CACJV,aAAa,CAAC;AACVW,UAAAA,QAAQ,EAAEH,EADA;AAEViB,UAAAA,UAAU,EAAEhB;AAFF,SAAD,CADT,CAAR;AAMH;AAEJ,KAVD;AAAA,4BAWI;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA,gBAAiCA,KAAK,GAAGA,KAAK,CAAC,CAAD,CAAR,GAAc;AAApD;AAAA;AAAA;AAAA;AAAA,YAXJ,EAaQD,EAAE,KAAKG,QAAP,gBACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAmC,MAAA,OAAO,EAAEG,YAA5C;AAAA,6BAA0D,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAA1D;AAAA;AAAA;AAAA;AAAA,YADJ,GAGI,IAhBZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GAxEQP,U;UACYV,W,EACAC,W,EACEA,W,EACDA,W;;;KAJbS,U;AA0ET,eAAeA,UAAf","sourcesContent":["import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectServerId, setServerInfo, setChannelInfo, setCategoryInfo, selectCategoryId, selectChannelId } from './features/counter/appSlice';\r\nimport './ServerIcon.css'\r\nimport { BsX } from \"react-icons/bs\";\r\nimport db from './firebase';\r\n\r\n\r\nfunction ServerIcon({ id, title }) {\r\n    const dispatch = useDispatch();\r\n    const serverId = useSelector(selectServerId);\r\n    const categoryId = useSelector(selectCategoryId);\r\n    const channelId = useSelector(selectChannelId);\r\n\r\n    const removeServer = () => {\r\n        const server = db.collection('servers');\r\n\r\n\r\n        server.doc(serverId).collection('categories').get().then((res) => {\r\n            res.forEach((element) => {\r\n                element.ref.collection('channels').get().then((res) => {\r\n                    res.forEach((element) => {\r\n                        element.ref.collection('messages').get().then((res) => {\r\n                            res.forEach((element) => {\r\n                                element.ref.delete()\r\n                            })\r\n                            element.ref.delete()\r\n                        })\r\n                        element.ref.delete()\r\n                    })\r\n                    element.ref.delete()\r\n                })\r\n                element.ref.delete()\r\n            })\r\n        });\r\n\r\n\r\n\r\n        server.doc(serverId).delete();\r\n\r\n        dispatch(\r\n            setChannelInfo({\r\n                channelId: null,\r\n            })\r\n        )\r\n\r\n        dispatch(\r\n            setCategoryInfo({\r\n                categoryId: null,\r\n            })\r\n        )\r\n\r\n        dispatch(\r\n            setServerInfo({\r\n                serverId: null,\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className='serverIcon' onClick={() => {\r\n            if (id != serverId) {\r\n                dispatch(\r\n                    setServerInfo({\r\n                        serverId: id,\r\n                        serverName: title,\r\n                    })\r\n                )\r\n            }\r\n\r\n        }}>\r\n            <p className='serverIcon_title'>{title ? title[0] : null}</p>\r\n            {\r\n                id === serverId ?\r\n                    <div className='serverIcon_remove' onClick={removeServer}><BsX /></div>\r\n                    :\r\n                    null\r\n            }\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ServerIcon\r\n"]},"metadata":{},"sourceType":"module"}