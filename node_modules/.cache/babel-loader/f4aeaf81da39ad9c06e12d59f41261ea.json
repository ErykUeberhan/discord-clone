{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';export var appSlice=createSlice({name:'app',initialState:{channelId:null,channelName:null,categoryId:null,categoryName:null,serverId:null,serverName:null,mobileMenu:null},reducers:{setChannelInfo:function setChannelInfo(state,action){state.channelId=action.payload.channelId;state.channelName=action.payload.channelName;},setCategoryInfo:function setCategoryInfo(state,action){state.categoryId=action.payload.categoryId;state.categoryName=action.payload.categoryName;},setServerInfo:function setServerInfo(state,action){state.serverId=action.payload.serverId;state.serverName=action.payload.serverName;},setMobileVersion:function setMobileVersion(state,action){state.mobileMenu=action.payload.mobileMenu;}}});var _appSlice$actions=appSlice.actions,setChannelInfo=_appSlice$actions.setChannelInfo,setCategoryInfo=_appSlice$actions.setCategoryInfo,setServerInfo=_appSlice$actions.setServerInfo,setMobileVersion=_appSlice$actions.setMobileVersion;export{setChannelInfo,setCategoryInfo,setServerInfo,setMobileVersion};export var selectChannelId=function selectChannelId(state){return state.app.channelId;};export var selectChannelName=function selectChannelName(state){return state.app.channelName;};export var selectCategoryId=function selectCategoryId(state){return state.app.categoryId;};export var selectCategoryName=function selectCategoryName(state){return state.app.categoryName;};export var selectServerId=function selectServerId(state){return state.app.serverId;};export var selectServerName=function selectServerName(state){return state.app.serverName;};export var selectMobileMenu=function selectMobileMenu(state){return state.app.mobileMenu;};export default appSlice.reducer;","map":{"version":3,"sources":["C:/Users/eryko/Desktop/ReactProjects/discord-clone/src/features/counter/appSlice.js"],"names":["createSlice","appSlice","name","initialState","channelId","channelName","categoryId","categoryName","serverId","serverName","mobileMenu","reducers","setChannelInfo","state","action","payload","setCategoryInfo","setServerInfo","setMobileVersion","actions","selectChannelId","app","selectChannelName","selectCategoryId","selectCategoryName","selectServerId","selectServerName","selectMobileMenu","reducer"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAGD,WAAW,CAAC,CAChCE,IAAI,CAAE,KAD0B,CAEhCC,YAAY,CAAE,CACVC,SAAS,CAAE,IADD,CAEVC,WAAW,CAAE,IAFH,CAGVC,UAAU,CAAE,IAHF,CAIVC,YAAY,CAAE,IAJJ,CAKVC,QAAQ,CAAE,IALA,CAMVC,UAAU,CAAE,IANF,CAOVC,UAAU,CAAE,IAPF,CAFkB,CAWhCC,QAAQ,CAAE,CACNC,cAAc,CAAE,wBAACC,KAAD,CAAQC,MAAR,CAAmB,CAC/BD,KAAK,CAACT,SAAN,CAAkBU,MAAM,CAACC,OAAP,CAAeX,SAAjC,CACAS,KAAK,CAACR,WAAN,CAAoBS,MAAM,CAACC,OAAP,CAAeV,WAAnC,CACH,CAJK,CAKNW,eAAe,CAAE,yBAACH,KAAD,CAAQC,MAAR,CAAmB,CAChCD,KAAK,CAACP,UAAN,CAAmBQ,MAAM,CAACC,OAAP,CAAeT,UAAlC,CACAO,KAAK,CAACN,YAAN,CAAqBO,MAAM,CAACC,OAAP,CAAeR,YAApC,CACH,CARK,CASNU,aAAa,CAAE,uBAACJ,KAAD,CAAQC,MAAR,CAAmB,CAC9BD,KAAK,CAACL,QAAN,CAAiBM,MAAM,CAACC,OAAP,CAAeP,QAAhC,CACAK,KAAK,CAACJ,UAAN,CAAmBK,MAAM,CAACC,OAAP,CAAeN,UAAlC,CACH,CAZK,CAaNS,gBAAgB,CAAE,0BAACL,KAAD,CAAQC,MAAR,CAAmB,CACjCD,KAAK,CAACH,UAAN,CAAmBI,MAAM,CAACC,OAAP,CAAeL,UAAlC,CACH,CAfK,CAXsB,CAAD,CAA5B,C,sBA8B6ET,QAAQ,CAACkB,O,CAA9EP,c,mBAAAA,c,CAAgBI,e,mBAAAA,e,CAAiBC,a,mBAAAA,a,CAAeC,gB,mBAAAA,gB,uEAE/D,MAAO,IAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAP,KAAK,QAAIA,CAAAA,KAAK,CAACQ,GAAN,CAAUjB,SAAd,EAA7B,CACP,MAAO,IAAMkB,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAT,KAAK,QAAIA,CAAAA,KAAK,CAACQ,GAAN,CAAUhB,WAAd,EAA/B,CAEP,MAAO,IAAMkB,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAAV,KAAK,QAAIA,CAAAA,KAAK,CAACQ,GAAN,CAAUf,UAAd,EAA9B,CACP,MAAO,IAAMkB,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAX,KAAK,QAAIA,CAAAA,KAAK,CAACQ,GAAN,CAAUd,YAAd,EAAhC,CAEP,MAAO,IAAMkB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAZ,KAAK,QAAIA,CAAAA,KAAK,CAACQ,GAAN,CAAUb,QAAd,EAA5B,CACP,MAAO,IAAMkB,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAAb,KAAK,QAAIA,CAAAA,KAAK,CAACQ,GAAN,CAAUZ,UAAd,EAA9B,CAEP,MAAO,IAAMkB,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAAd,KAAK,QAAIA,CAAAA,KAAK,CAACQ,GAAN,CAAUX,UAAd,EAA9B,CAEP,cAAeT,CAAAA,QAAQ,CAAC2B,OAAxB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const appSlice = createSlice({\r\n    name: 'app',\r\n    initialState: {\r\n        channelId: null,\r\n        channelName: null,\r\n        categoryId: null,\r\n        categoryName: null,\r\n        serverId: null,\r\n        serverName: null,\r\n        mobileMenu: null,\r\n    },\r\n    reducers: {\r\n        setChannelInfo: (state, action) => {\r\n            state.channelId = action.payload.channelId;\r\n            state.channelName = action.payload.channelName;\r\n        },\r\n        setCategoryInfo: (state, action) => {\r\n            state.categoryId = action.payload.categoryId;\r\n            state.categoryName = action.payload.categoryName;\r\n        },\r\n        setServerInfo: (state, action) => {\r\n            state.serverId = action.payload.serverId;\r\n            state.serverName = action.payload.serverName;\r\n        },\r\n        setMobileVersion: (state, action) => {\r\n            state.mobileMenu = action.payload.mobileMenu;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { setChannelInfo, setCategoryInfo, setServerInfo, setMobileVersion } = appSlice.actions;\r\n\r\nexport const selectChannelId = state => state.app.channelId;\r\nexport const selectChannelName = state => state.app.channelName;\r\n\r\nexport const selectCategoryId = state => state.app.categoryId;\r\nexport const selectCategoryName = state => state.app.categoryName;\r\n\r\nexport const selectServerId = state => state.app.serverId;\r\nexport const selectServerName = state => state.app.serverName;\r\n\r\nexport const selectMobileMenu = state => state.app.mobileMenu;\r\n\r\nexport default appSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}