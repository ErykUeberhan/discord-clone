{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\eryko\\\\Desktop\\\\ReactProjects\\\\discord-clone\\\\src\\\\ServerIcon.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectServerId, setServerInfo, setChannelInfo, setCategoryInfo, selectCategoryId, selectChannelId } from './features/counter/appSlice';\nimport './ServerIcon.css';\nimport { BsX } from \"react-icons/bs\";\nimport db from './firebase';\nimport { useHistory } from 'react-router-dom';\n\nfunction ServerIcon({\n  id,\n  title\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const serverId = useSelector(selectServerId);\n  const categoryId = useSelector(selectCategoryId);\n  const channelId = useSelector(selectChannelId);\n  const history = useHistory();\n\n  const removeServer = () => {\n    const server = db.collection('servers').doc(serverId);\n    const category = server.collection('categories').doc(categoryId);\n    const channel = category.collection('categories').doc(channelId);\n    category.get().then(res => {\n      res.forEach(element => {\n        element.ref.delete();\n      });\n    });\n    server.delete();\n    dispatch(setChannelInfo({\n      channelId: null\n    }), setCategoryInfo({\n      categoryId: null\n    }), setServerInfo({\n      serverId: null\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"serverIcon\",\n    onClick: () => {\n      dispatch(setServerInfo({\n        serverId: id,\n        serverName: title\n      }));\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"serverIcon_title\",\n      children: title ? title[0] : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), id === serverId ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"serverIcon_remove\",\n      onClick: e => {\n        e.stopPropagation();\n        removeServer();\n      },\n      children: /*#__PURE__*/_jsxDEV(BsX, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 113\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ServerIcon, \"KQh992nH/v4ZRdV69o6vLX0Ldt8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useHistory];\n});\n\n_c = ServerIcon;\nexport default ServerIcon;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServerIcon\");","map":{"version":3,"sources":["C:/Users/eryko/Desktop/ReactProjects/discord-clone/src/ServerIcon.js"],"names":["React","useDispatch","useSelector","selectServerId","setServerInfo","setChannelInfo","setCategoryInfo","selectCategoryId","selectChannelId","BsX","db","useHistory","ServerIcon","id","title","dispatch","serverId","categoryId","channelId","history","removeServer","server","collection","doc","category","channel","get","then","res","forEach","element","ref","delete","serverName","e","stopPropagation"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,EAAyBC,aAAzB,EAAwCC,cAAxC,EAAwDC,eAAxD,EAAyEC,gBAAzE,EAA2FC,eAA3F,QAAkH,6BAAlH;AACA,OAAO,kBAAP;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAGA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAApB,EAAmC;AAAA;;AAC/B,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,QAAQ,GAAGd,WAAW,CAACC,cAAD,CAA5B;AACA,QAAMc,UAAU,GAAGf,WAAW,CAACK,gBAAD,CAA9B;AACA,QAAMW,SAAS,GAAGhB,WAAW,CAACM,eAAD,CAA7B;AACA,QAAMW,OAAO,GAAGR,UAAU,EAA1B;;AAEA,QAAMS,YAAY,GAAG,MAAM;AACvB,UAAMC,MAAM,GAAGX,EAAE,CAACY,UAAH,CAAc,SAAd,EAAyBC,GAAzB,CAA6BP,QAA7B,CAAf;AACA,UAAMQ,QAAQ,GAAGH,MAAM,CAACC,UAAP,CAAkB,YAAlB,EAAgCC,GAAhC,CAAoCN,UAApC,CAAjB;AACA,UAAMQ,OAAO,GAAGD,QAAQ,CAACF,UAAT,CAAoB,YAApB,EAAkCC,GAAlC,CAAsCL,SAAtC,CAAhB;AAEAM,IAAAA,QAAQ,CAACE,GAAT,GAAeC,IAAf,CAAoBC,GAAG,IAAI;AACvBA,MAAAA,GAAG,CAACC,OAAJ,CAAYC,OAAO,IAAI;AACnBA,QAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACH,OAFD;AAGH,KAJD;AAKAX,IAAAA,MAAM,CAACW,MAAP;AACAjB,IAAAA,QAAQ,CACJV,cAAc,CAAC;AACXa,MAAAA,SAAS,EAAE;AADA,KAAD,CADV,EAIJZ,eAAe,CAAC;AACZW,MAAAA,UAAU,EAAE;AADA,KAAD,CAJX,EAOJb,aAAa,CAAC;AACVY,MAAAA,QAAQ,EAAE;AADA,KAAD,CAPT,CAAR;AAWH,GAtBD;;AAuBA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,OAAO,EAAE,MAAM;AACvCD,MAAAA,QAAQ,CACJX,aAAa,CAAC;AACVY,QAAAA,QAAQ,EAAEH,EADA;AAEVoB,QAAAA,UAAU,EAAEnB;AAFF,OAAD,CADT,CAAR;AAMH,KAPD;AAAA,4BAQI;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA,gBAAiCA,KAAK,GAAGA,KAAK,CAAC,CAAD,CAAR,GAAc;AAApD;AAAA;AAAA;AAAA;AAAA,YARJ,EAUQD,EAAE,KAAKG,QAAP,gBACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAmC,MAAA,OAAO,EAAGkB,CAAD,IAAO;AAAEA,QAAAA,CAAC,CAACC,eAAF;AAAqBf,QAAAA,YAAY;AAAI,OAA1F;AAAA,6BAA4F,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAA5F;AAAA;AAAA;AAAA;AAAA,YADJ,GAGI,IAbZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GAjDQR,U;UACYX,W,EACAC,W,EACEA,W,EACDA,W,EACFS,U;;;KALXC,U;AAmDT,eAAeA,UAAf","sourcesContent":["import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectServerId, setServerInfo, setChannelInfo, setCategoryInfo, selectCategoryId, selectChannelId } from './features/counter/appSlice';\r\nimport './ServerIcon.css'\r\nimport { BsX } from \"react-icons/bs\";\r\nimport db from './firebase';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nfunction ServerIcon({ id, title }) {\r\n    const dispatch = useDispatch();\r\n    const serverId = useSelector(selectServerId);\r\n    const categoryId = useSelector(selectCategoryId);\r\n    const channelId = useSelector(selectChannelId);\r\n    const history = useHistory();\r\n\r\n    const removeServer = () => {\r\n        const server = db.collection('servers').doc(serverId);\r\n        const category = server.collection('categories').doc(categoryId);\r\n        const channel = category.collection('categories').doc(channelId);\r\n\r\n        category.get().then(res => {\r\n            res.forEach(element => {\r\n                element.ref.delete();\r\n            });\r\n        });\r\n        server.delete();\r\n        dispatch(\r\n            setChannelInfo({\r\n                channelId: null,\r\n            }),\r\n            setCategoryInfo({\r\n                categoryId: null,\r\n            }),\r\n            setServerInfo({\r\n                serverId: null,\r\n            })\r\n        );\r\n    }\r\n    return (\r\n        <div className='serverIcon' onClick={() => {\r\n            dispatch(\r\n                setServerInfo({\r\n                    serverId: id,\r\n                    serverName: title,\r\n                })\r\n            )\r\n        }}>\r\n            <p className='serverIcon_title'>{title ? title[0] : null}</p>\r\n            {\r\n                id === serverId ?\r\n                    <div className='serverIcon_remove' onClick={(e) => { e.stopPropagation(); removeServer() }}><BsX /></div>\r\n                    :\r\n                    null\r\n            }\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ServerIcon\r\n"]},"metadata":{},"sourceType":"module"}