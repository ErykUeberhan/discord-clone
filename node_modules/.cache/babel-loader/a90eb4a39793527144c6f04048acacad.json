{"ast":null,"code":"import _slicedToArray from\"C:/Users/eryko/Desktop/ReactProjects/discord-clone/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useLayoutEffect,useState}from'react';import'./MobileMenuIcon.css';import{GiHamburgerMenu}from'react-icons/gi';import{useDispatch,useSelector}from'react-redux';import{selectMobileMenu,setMobileVersion}from'./features/counter/appSlice';function MobileMenuIcon(){var dispatch=useDispatch();var mobileMenu=useSelector(selectMobileMenu);function useWindowSize(){var _useState=useState([0,0]),_useState2=_slicedToArray(_useState,2),size=_useState2[0],setSize=_useState2[1];useLayoutEffect(function(){function updateSize(){setSize([window.innerWidth,window.innerHeight]);}window.addEventListener('resize',updateSize);updateSize();return function(){return window.removeEventListener('resize',updateSize);};},[]);return size;}var _useWindowSize=useWindowSize(),_useWindowSize2=_slicedToArray(_useWindowSize,1),width=_useWindowSize2[0];if(width>=740){dispatch(setMobileVersion({mobileMenu:null}));}return/*#__PURE__*/_jsx(\"div\",{className:\"mobileMenuIcon\",onClick:function onClick(){dispatch(setMobileVersion({mobileMenu:!mobileMenu}));console.log(width);},children:/*#__PURE__*/_jsx(GiHamburgerMenu,{className:\"mobileMenuIcon_icon\"})});}export default MobileMenuIcon;","map":{"version":3,"sources":["C:/Users/eryko/Desktop/ReactProjects/discord-clone/src/MobileMenuIcon.js"],"names":["React","useLayoutEffect","useState","GiHamburgerMenu","useDispatch","useSelector","selectMobileMenu","setMobileVersion","MobileMenuIcon","dispatch","mobileMenu","useWindowSize","size","setSize","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","width","console","log"],"mappings":"gLAAA,MAAOA,CAAAA,KAAP,EAAgBC,eAAhB,CAAiCC,QAAjC,KAAiD,OAAjD,CACA,MAAO,sBAAP,CACA,OAASC,eAAT,KAAgC,gBAAhC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,gBAAT,CAA2BC,gBAA3B,KAAmD,6BAAnD,CAGA,QAASC,CAAAA,cAAT,EAA0B,CACtB,GAAMC,CAAAA,QAAQ,CAAGL,WAAW,EAA5B,CACA,GAAMM,CAAAA,UAAU,CAAGL,WAAW,CAACC,gBAAD,CAA9B,CAEA,QAASK,CAAAA,aAAT,EAAyB,eACGT,QAAQ,CAAC,CAAC,CAAD,CAAI,CAAJ,CAAD,CADX,wCACdU,IADc,eACRC,OADQ,eAErBZ,eAAe,CAAC,UAAM,CAClB,QAASa,CAAAA,UAAT,EAAsB,CAClBD,OAAO,CAAC,CAACE,MAAM,CAACC,UAAR,CAAoBD,MAAM,CAACE,WAA3B,CAAD,CAAP,CACH,CACDF,MAAM,CAACG,gBAAP,CAAwB,QAAxB,CAAkCJ,UAAlC,EACAA,UAAU,GACV,MAAO,kBAAMC,CAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,CAAqCL,UAArC,CAAN,EAAP,CACH,CAPc,CAOZ,EAPY,CAAf,CAQA,MAAOF,CAAAA,IAAP,CACH,CAfqB,mBAkBND,aAAa,EAlBP,kDAkBfS,KAlBe,oBAoBtB,GAAIA,KAAK,EAAI,GAAb,CAAkB,CACdX,QAAQ,CACJF,gBAAgB,CAAC,CACbG,UAAU,CAAE,IADC,CAAD,CADZ,CAAR,CAKH,CACD,mBACI,YAAK,SAAS,CAAC,gBAAf,CAAgC,OAAO,CAAE,kBAAM,CAC3CD,QAAQ,CACJF,gBAAgB,CAAC,CACbG,UAAU,CAAE,CAACA,UADA,CAAD,CADZ,CAAR,CAIGW,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACN,CAND,uBAOI,KAAC,eAAD,EAAiB,SAAS,CAAC,qBAA3B,EAPJ,EADJ,CAWH,CAED,cAAeZ,CAAAA,cAAf","sourcesContent":["import React, { useLayoutEffect, useState } from 'react'\r\nimport './MobileMenuIcon.css'\r\nimport { GiHamburgerMenu } from 'react-icons/gi';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectMobileMenu, setMobileVersion } from './features/counter/appSlice';\r\n\r\n\r\nfunction MobileMenuIcon() {\r\n    const dispatch = useDispatch();\r\n    const mobileMenu = useSelector(selectMobileMenu);\r\n\r\n    function useWindowSize() {\r\n        const [size, setSize] = useState([0, 0]);\r\n        useLayoutEffect(() => {\r\n            function updateSize() {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n            window.addEventListener('resize', updateSize);\r\n            updateSize();\r\n            return () => window.removeEventListener('resize', updateSize);\r\n        }, []);\r\n        return size;\r\n    }\r\n\r\n\r\n    const [width] = useWindowSize();\r\n\r\n    if (width >= 740) {\r\n        dispatch(\r\n            setMobileVersion({\r\n                mobileMenu: null,\r\n            })\r\n        );\r\n    }\r\n    return (\r\n        <div className='mobileMenuIcon' onClick={() => {\r\n            dispatch(\r\n                setMobileVersion({\r\n                    mobileMenu: !mobileMenu,\r\n                })\r\n            ); console.log(width)\r\n        }}>\r\n            <GiHamburgerMenu className='mobileMenuIcon_icon' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MobileMenuIcon\r\n"]},"metadata":{},"sourceType":"module"}