{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\eryko\\\\Desktop\\\\ReactProjects\\\\discord-clone\\\\src\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Chat.css';\nimport { MdAddCircle } from \"react-icons/md\";\nimport { FaGift, FaSmile } from \"react-icons/fa\";\nimport { RiFileGifFill } from \"react-icons/ri\";\nimport Message from './Message';\nimport { useEffect } from 'react';\nimport db from './firebase';\nimport Channels from './ChannelsList';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from './features/counter/userSlice';\n\nfunction Chat() {\n  _s();\n\n  const user = useSelector(selectUser);\n  const [messages, setMessages] = useState([]);\n  const [messageText, setMessageText] = useState();\n\n  const sendMessage = () => {\n    let nick = '';\n    if (user) nick = user.email.slice(0, user.email.indexOf('@'));\n\n    const dateEdit = date => {\n      if (date < 10) return `0${date}`;else return date;\n    };\n\n    let d = new Date();\n    let day = d.getDate();\n    let month = d.getMonth();\n    let year = d.getFullYear();\n    let hours = d.getHours();\n    let minutes = d.getMinutes();\n    let date = `${dateEdit(hours)}:${dateEdit(minutes)} \\xa0 ${dateEdit(day)}/${dateEdit(month)}/${dateEdit(year)}`;\n    db.collection('messages').add({\n      message: messageText,\n      nick,\n      date\n    });\n  };\n\n  useEffect(() => {\n    db.collection(\"messages\").onSnapshot(snapshot => setMessages(snapshot.docs.map(doc => ({\n      id: doc.id,\n      messageT: doc.data()\n    }))));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_messages\",\n      children: messages.map(({\n        id,\n        messageT\n      }) => /*#__PURE__*/_jsxDEV(Message, {\n        id: id,\n        message: messageT.message,\n        nick: messageT.nick,\n        date: messageT.date\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_sendTextField\",\n      children: [/*#__PURE__*/_jsxDEV(MdAddCircle, {\n        className: \"chat_sendTextField_icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"chat_sendTextField_input\",\n        onChange: event => setMessageText(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        onClick: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FaGift, {\n        className: \"chat_sendTextField_icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RiFileGifFill, {\n        className: \"chat_sendTextField_icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FaSmile, {\n        className: \"chat_sendTextField_icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"RptRsaqHrIErPERN8DrB39Mpcg0=\", false, function () {\n  return [useSelector];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/eryko/Desktop/ReactProjects/discord-clone/src/Chat.js"],"names":["React","useState","MdAddCircle","FaGift","FaSmile","RiFileGifFill","Message","useEffect","db","Channels","useSelector","selectUser","Chat","user","messages","setMessages","messageText","setMessageText","sendMessage","nick","email","slice","indexOf","dateEdit","date","d","Date","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","collection","add","message","onSnapshot","snapshot","docs","map","doc","id","messageT","data","event","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,YAAP;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,gBAAhC;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,8BAA3B;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAMC,IAAI,GAAGH,WAAW,CAACC,UAAD,CAAxB;AAEA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,EAA9C;;AAIA,QAAMiB,WAAW,GAAG,MAAM;AACtB,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIN,IAAJ,EAAUM,IAAI,GAAGN,IAAI,CAACO,KAAL,CAAWC,KAAX,CAAiB,CAAjB,EAAoBR,IAAI,CAACO,KAAL,CAAWE,OAAX,CAAmB,GAAnB,CAApB,CAAP;;AAEV,UAAMC,QAAQ,GAAIC,IAAD,IAAU;AACvB,UAAIA,IAAI,GAAG,EAAX,EAAe,OAAQ,IAAGA,IAAK,EAAhB,CAAf,KACK,OAAOA,IAAP;AACR,KAHD;;AAIA,QAAIC,CAAC,GAAG,IAAIC,IAAJ,EAAR;AACA,QAAIC,GAAG,GAAGF,CAAC,CAACG,OAAF,EAAV;AACA,QAAIC,KAAK,GAAGJ,CAAC,CAACK,QAAF,EAAZ;AACA,QAAIC,IAAI,GAAGN,CAAC,CAACO,WAAF,EAAX;AACA,QAAIC,KAAK,GAAGR,CAAC,CAACS,QAAF,EAAZ;AACA,QAAIC,OAAO,GAAGV,CAAC,CAACW,UAAF,EAAd;AACA,QAAIZ,IAAI,GAAI,GAAED,QAAQ,CAACU,KAAD,CAAQ,IAAGV,QAAQ,CAACY,OAAD,CAAU,SAAQZ,QAAQ,CAACI,GAAD,CAAM,IAAGJ,QAAQ,CAACM,KAAD,CAAQ,IAAGN,QAAQ,CAACQ,IAAD,CAAO,EAA9G;AAEAvB,IAAAA,EAAE,CAAC6B,UAAH,CAAc,UAAd,EAA0BC,GAA1B,CAA8B;AAC1BC,MAAAA,OAAO,EAAEvB,WADiB;AAE1BG,MAAAA,IAF0B;AAG1BK,MAAAA;AAH0B,KAA9B;AAKH,GArBD;;AAuBAjB,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,EAAE,CAAC6B,UAAH,CAAc,UAAd,EAA0BG,UAA1B,CAAsCC,QAAD,IACjC1B,WAAW,CACP0B,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBC,GAAD,KAAU;AACxBC,MAAAA,EAAE,EAAED,GAAG,CAACC,EADgB;AAExBC,MAAAA,QAAQ,EAAEF,GAAG,CAACG,IAAJ;AAFc,KAAV,CAAlB,CADO,CADf;AAQH,GATQ,EASN,EATM,CAAT;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACKjC,QAAQ,CAAC6B,GAAT,CAAa,CAAC;AAAEE,QAAAA,EAAF;AAAMC,QAAAA;AAAN,OAAD,kBACV,QAAC,OAAD;AAAkB,QAAA,EAAE,EAAED,EAAtB;AAA0B,QAAA,OAAO,EAAEC,QAAQ,CAACP,OAA5C;AAAqD,QAAA,IAAI,EAAEO,QAAQ,CAAC3B,IAApE;AAA0E,QAAA,IAAI,EAAE2B,QAAQ,CAACtB;AAAzF,SAAcqB,EAAd;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,SAAS,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,SAAS,EAAC,0BAAjB;AAA4C,QAAA,QAAQ,EAAGG,KAAD,IAAW/B,cAAc,CAAC+B,KAAK,CAACC,MAAN,CAAaC,KAAd;AAA/E;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,OAAO,EAAEhC;AAA9B;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,aAAD;AAAe,QAAA,SAAS,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI,QAAC,OAAD;AAAS,QAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GA1DQN,I;UACQF,W;;;KADRE,I;AA4DT,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport './Chat.css';\r\nimport { MdAddCircle } from \"react-icons/md\";\r\nimport { FaGift, FaSmile } from \"react-icons/fa\";\r\nimport { RiFileGifFill } from \"react-icons/ri\";\r\nimport Message from './Message';\r\nimport { useEffect } from 'react';\r\nimport db from './firebase';\r\nimport Channels from './ChannelsList';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from './features/counter/userSlice';\r\n\r\nfunction Chat() {\r\n    const user = useSelector(selectUser);\r\n\r\n    const [messages, setMessages] = useState([])\r\n    const [messageText, setMessageText] = useState()\r\n\r\n\r\n\r\n    const sendMessage = () => {\r\n        let nick = ''\r\n        if (user) nick = user.email.slice(0, user.email.indexOf('@'));\r\n\r\n        const dateEdit = (date) => {\r\n            if (date < 10) return `0${date}`\r\n            else return date\r\n        }\r\n        let d = new Date();\r\n        let day = d.getDate();\r\n        let month = d.getMonth();\r\n        let year = d.getFullYear();\r\n        let hours = d.getHours();\r\n        let minutes = d.getMinutes();\r\n        let date = `${dateEdit(hours)}:${dateEdit(minutes)} \\xa0 ${dateEdit(day)}/${dateEdit(month)}/${dateEdit(year)}`;\r\n\r\n        db.collection('messages').add({\r\n            message: messageText,\r\n            nick,\r\n            date,\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        db.collection(\"messages\").onSnapshot((snapshot) =>\r\n            setMessages(\r\n                snapshot.docs.map((doc) => ({\r\n                    id: doc.id,\r\n                    messageT: doc.data(),\r\n                }))\r\n            )\r\n        );\r\n    }, [])\r\n    return (\r\n        <div className='chat'>\r\n            <div className='chat_messages'>\r\n                {messages.map(({ id, messageT }) => (\r\n                    <Message key={id} id={id} message={messageT.message} nick={messageT.nick} date={messageT.date} />\r\n                ))}\r\n            </div>\r\n            <div className='chat_sendTextField'>\r\n                <MdAddCircle className='chat_sendTextField_icon' />\r\n                <input className='chat_sendTextField_input' onChange={(event) => setMessageText(event.target.value)} />\r\n                <input type='submit' onClick={sendMessage} />\r\n                <FaGift className='chat_sendTextField_icon' />\r\n                <RiFileGifFill className='chat_sendTextField_icon' />\r\n                <FaSmile className='chat_sendTextField_icon' />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n"]},"metadata":{},"sourceType":"module"}